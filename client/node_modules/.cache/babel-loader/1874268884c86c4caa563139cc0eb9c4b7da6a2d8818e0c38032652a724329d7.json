{"ast":null,"code":"\"use strict\";\n\nconst plainTextAdapter = {\n  getHighlighter: () => ({\n    code\n  }) => ({\n    code,\n    highlighted: false\n  })\n};\nfunction createShikiAdapter(opts) {\n  const {\n    load,\n    loadSync,\n    highlightOptions,\n    theme\n  } = opts;\n  return {\n    loadContextSync: loadSync,\n    loadContext: load,\n    unloadContext(ctx) {\n      ctx?.dispose?.();\n    },\n    getHighlighter: ctx => {\n      return ({\n        code,\n        language,\n        meta\n      }) => {\n        if (!ctx) {\n          return {\n            code,\n            highlighted: false\n          };\n        }\n        const colorScheme = meta?.colorScheme || \"dark\";\n        const resolvedTheme = typeof theme === \"string\" ? theme : theme[colorScheme];\n        if (!resolvedTheme) {\n          throw new Error(`Theme not found for color scheme: ${colorScheme}`);\n        }\n        return {\n          highlighted: true,\n          code: removeWrapperTags(ctx.codeToHtml(code, {\n            theme: resolvedTheme,\n            ...highlightOptions,\n            lang: language,\n            transformers: [{\n              line(hast, line) {\n                hast.properties || (hast.properties = {});\n                Object.assign(hast.properties, {\n                  \"data-line\": line,\n                  \"data-highlight\": meta?.highlightLines?.includes(line) ? \"\" : void 0,\n                  \"data-word-wrap\": meta?.wordWrap ? \"\" : void 0,\n                  \"data-diff\": meta?.addedLineNumbers?.includes(line) ? \"added\" : meta?.removedLineNumbers?.includes(line) ? \"removed\" : void 0,\n                  \"data-focused\": meta?.focusedLineNumbers?.includes(line) ? \"\" : void 0\n                });\n              }\n            }, ...(highlightOptions?.transformers ?? [])]\n          }))\n        };\n      };\n    }\n  };\n}\nconst removeWrapperTags = html => {\n  return html.replace(/<pre[^>]*>/, \"\").replace(/<\\/pre>$/, \"\").replace(/<code[^>]*>/, \"\").replace(/<\\/code>$/, \"\");\n};\nfunction createHighlightJsAdapter(opts) {\n  const {\n    load,\n    loadSync,\n    highlightOptions\n  } = opts;\n  return {\n    loadContextSync: loadSync,\n    loadContext: load,\n    unloadContext(ctx) {\n      const langs = ctx?.listLanguages?.();\n      langs?.forEach(lang => {\n        ctx?.unregisterLanguage?.(lang);\n      });\n    },\n    getHighlighter: ctx => {\n      return ({\n        code,\n        language = \"plaintext\",\n        meta\n      }) => {\n        if (!ctx) {\n          return {\n            code,\n            highlighted: false\n          };\n        }\n        const hasDiff = (meta?.addedLineNumbers?.length ?? 0) > 0 || (meta?.removedLineNumbers?.length ?? 0) > 0;\n        const result = ctx.highlight(code.trim(), {\n          language,\n          ...highlightOptions\n        });\n        const lines = result.value.split(\"\\n\");\n        return {\n          highlighted: true,\n          code: lines.map((line, index) => {\n            const lineNumber = index + 1;\n            const attrs = [`data-line=\"${lineNumber}\"`, meta?.highlightLines?.includes(lineNumber) && \"data-highlight\", meta?.wordWrap && \"data-word-wrap\", hasDiff && meta?.addedLineNumbers?.includes(lineNumber) && `data-diff=\"added\"`, hasDiff && meta?.removedLineNumbers?.includes(lineNumber) && `data-diff=\"removed\"`, meta?.focusedLineNumbers?.includes(lineNumber) && \"data-focused\"];\n            return `<span ${attrs.filter(Boolean).join(\" \")}>${line || \" \"}</span>`;\n          }).join(\"\\n\")\n        };\n      };\n    }\n  };\n}\nexport { createHighlightJsAdapter, createShikiAdapter, plainTextAdapter };","map":{"version":3,"names":["plainTextAdapter","getHighlighter","code","highlighted","createShikiAdapter","opts","load","loadSync","highlightOptions","theme","loadContextSync","loadContext","unloadContext","ctx","dispose","language","meta","colorScheme","resolvedTheme","Error","removeWrapperTags","codeToHtml","lang","transformers","line","hast","properties","Object","assign","highlightLines","includes","wordWrap","addedLineNumbers","removedLineNumbers","focusedLineNumbers","html","replace","createHighlightJsAdapter","langs","listLanguages","forEach","unregisterLanguage","hasDiff","length","result","highlight","trim","lines","value","split","map","index","lineNumber","attrs","filter","Boolean","join"],"sources":["/Users/ameliamagick/personal-finance-tracker/node_modules/@chakra-ui/react/dist/esm/components/code-block/adapters.js"],"sourcesContent":["\"use strict\";\nconst plainTextAdapter = {\n  getHighlighter: () => ({ code }) => ({ code, highlighted: false })\n};\nfunction createShikiAdapter(opts) {\n  const { load, loadSync, highlightOptions, theme } = opts;\n  return {\n    loadContextSync: loadSync,\n    loadContext: load,\n    unloadContext(ctx) {\n      ctx?.dispose?.();\n    },\n    getHighlighter: (ctx) => {\n      return ({ code, language, meta }) => {\n        if (!ctx) {\n          return { code, highlighted: false };\n        }\n        const colorScheme = meta?.colorScheme || \"dark\";\n        const resolvedTheme = typeof theme === \"string\" ? theme : theme[colorScheme];\n        if (!resolvedTheme) {\n          throw new Error(`Theme not found for color scheme: ${colorScheme}`);\n        }\n        return {\n          highlighted: true,\n          code: removeWrapperTags(\n            ctx.codeToHtml(code, {\n              theme: resolvedTheme,\n              ...highlightOptions,\n              lang: language,\n              transformers: [\n                {\n                  line(hast, line) {\n                    hast.properties || (hast.properties = {});\n                    Object.assign(hast.properties, {\n                      \"data-line\": line,\n                      \"data-highlight\": meta?.highlightLines?.includes(line) ? \"\" : void 0,\n                      \"data-word-wrap\": meta?.wordWrap ? \"\" : void 0,\n                      \"data-diff\": meta?.addedLineNumbers?.includes(line) ? \"added\" : meta?.removedLineNumbers?.includes(line) ? \"removed\" : void 0,\n                      \"data-focused\": meta?.focusedLineNumbers?.includes(line) ? \"\" : void 0\n                    });\n                  }\n                },\n                ...highlightOptions?.transformers ?? []\n              ]\n            })\n          )\n        };\n      };\n    }\n  };\n}\nconst removeWrapperTags = (html) => {\n  return html.replace(/<pre[^>]*>/, \"\").replace(/<\\/pre>$/, \"\").replace(/<code[^>]*>/, \"\").replace(/<\\/code>$/, \"\");\n};\nfunction createHighlightJsAdapter(opts) {\n  const { load, loadSync, highlightOptions } = opts;\n  return {\n    loadContextSync: loadSync,\n    loadContext: load,\n    unloadContext(ctx) {\n      const langs = ctx?.listLanguages?.();\n      langs?.forEach((lang) => {\n        ctx?.unregisterLanguage?.(lang);\n      });\n    },\n    getHighlighter: (ctx) => {\n      return ({ code, language = \"plaintext\", meta }) => {\n        if (!ctx) {\n          return { code, highlighted: false };\n        }\n        const hasDiff = (meta?.addedLineNumbers?.length ?? 0) > 0 || (meta?.removedLineNumbers?.length ?? 0) > 0;\n        const result = ctx.highlight(code.trim(), {\n          language,\n          ...highlightOptions\n        });\n        const lines = result.value.split(\"\\n\");\n        return {\n          highlighted: true,\n          code: lines.map((line, index) => {\n            const lineNumber = index + 1;\n            const attrs = [\n              `data-line=\"${lineNumber}\"`,\n              meta?.highlightLines?.includes(lineNumber) && \"data-highlight\",\n              meta?.wordWrap && \"data-word-wrap\",\n              hasDiff && meta?.addedLineNumbers?.includes(lineNumber) && `data-diff=\"added\"`,\n              hasDiff && meta?.removedLineNumbers?.includes(lineNumber) && `data-diff=\"removed\"`,\n              meta?.focusedLineNumbers?.includes(lineNumber) && \"data-focused\"\n            ];\n            return `<span ${attrs.filter(Boolean).join(\" \")}>${line || \" \"}</span>`;\n          }).join(\"\\n\")\n        };\n      };\n    }\n  };\n}\n\nexport { createHighlightJsAdapter, createShikiAdapter, plainTextAdapter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}