{"ast":null,"code":"\"use strict\";\n\nimport { mapEntries } from '../utils/entries.js';\nconst SPECIAL_KEY_REGEX = /^@|&|&$/;\nconst createConditions = options => {\n  const {\n    breakpoints,\n    conditions: conds = {}\n  } = options;\n  const conditions = mapEntries(conds, (key, value) => [`_${key}`, value]);\n  const values = Object.assign({}, conditions, breakpoints.conditions);\n  function keys() {\n    return Object.keys(values);\n  }\n  function has(key) {\n    return keys().includes(key) || SPECIAL_KEY_REGEX.test(key) || key.startsWith(\"_\");\n  }\n  function sort(paths) {\n    return paths.filter(v => v !== \"base\").sort((a, b) => {\n      const aa = has(a);\n      const bb = has(b);\n      if (aa && !bb) return 1;\n      if (!aa && bb) return -1;\n      return 0;\n    });\n  }\n  function expandAtRule(key) {\n    if (!key.startsWith(\"@breakpoint\")) return key;\n    return breakpoints.getCondition(key.replace(\"@breakpoint \", \"\"));\n  }\n  function resolve(key) {\n    return Reflect.get(values, key) || key;\n  }\n  return {\n    keys,\n    sort,\n    has,\n    resolve,\n    breakpoints: breakpoints.keys(),\n    expandAtRule\n  };\n};\nexport { createConditions };","map":{"version":3,"names":["mapEntries","SPECIAL_KEY_REGEX","createConditions","options","breakpoints","conditions","conds","key","value","values","Object","assign","keys","has","includes","test","startsWith","sort","paths","filter","v","a","b","aa","bb","expandAtRule","getCondition","replace","resolve","Reflect","get"],"sources":["/Users/ameliamagick/personal-finance-tracker/node_modules/@chakra-ui/react/dist/esm/styled-system/conditions.js"],"sourcesContent":["\"use strict\";\nimport { mapEntries } from '../utils/entries.js';\n\nconst SPECIAL_KEY_REGEX = /^@|&|&$/;\nconst createConditions = (options) => {\n  const { breakpoints, conditions: conds = {} } = options;\n  const conditions = mapEntries(conds, (key, value) => [`_${key}`, value]);\n  const values = Object.assign({}, conditions, breakpoints.conditions);\n  function keys() {\n    return Object.keys(values);\n  }\n  function has(key) {\n    return keys().includes(key) || SPECIAL_KEY_REGEX.test(key) || key.startsWith(\"_\");\n  }\n  function sort(paths) {\n    return paths.filter((v) => v !== \"base\").sort((a, b) => {\n      const aa = has(a);\n      const bb = has(b);\n      if (aa && !bb) return 1;\n      if (!aa && bb) return -1;\n      return 0;\n    });\n  }\n  function expandAtRule(key) {\n    if (!key.startsWith(\"@breakpoint\")) return key;\n    return breakpoints.getCondition(key.replace(\"@breakpoint \", \"\"));\n  }\n  function resolve(key) {\n    return Reflect.get(values, key) || key;\n  }\n  return {\n    keys,\n    sort,\n    has,\n    resolve,\n    breakpoints: breakpoints.keys(),\n    expandAtRule\n  };\n};\n\nexport { createConditions };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,QAAQ,qBAAqB;AAEhD,MAAMC,iBAAiB,GAAG,SAAS;AACnC,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;EACpC,MAAM;IAAEC,WAAW;IAAEC,UAAU,EAAEC,KAAK,GAAG,CAAC;EAAE,CAAC,GAAGH,OAAO;EACvD,MAAME,UAAU,GAAGL,UAAU,CAACM,KAAK,EAAE,CAACC,GAAG,EAAEC,KAAK,KAAK,CAAC,IAAID,GAAG,EAAE,EAAEC,KAAK,CAAC,CAAC;EACxE,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,UAAU,EAAED,WAAW,CAACC,UAAU,CAAC;EACpE,SAASO,IAAIA,CAAA,EAAG;IACd,OAAOF,MAAM,CAACE,IAAI,CAACH,MAAM,CAAC;EAC5B;EACA,SAASI,GAAGA,CAACN,GAAG,EAAE;IAChB,OAAOK,IAAI,CAAC,CAAC,CAACE,QAAQ,CAACP,GAAG,CAAC,IAAIN,iBAAiB,CAACc,IAAI,CAACR,GAAG,CAAC,IAAIA,GAAG,CAACS,UAAU,CAAC,GAAG,CAAC;EACnF;EACA,SAASC,IAAIA,CAACC,KAAK,EAAE;IACnB,OAAOA,KAAK,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,MAAM,CAAC,CAACH,IAAI,CAAC,CAACI,CAAC,EAAEC,CAAC,KAAK;MACtD,MAAMC,EAAE,GAAGV,GAAG,CAACQ,CAAC,CAAC;MACjB,MAAMG,EAAE,GAAGX,GAAG,CAACS,CAAC,CAAC;MACjB,IAAIC,EAAE,IAAI,CAACC,EAAE,EAAE,OAAO,CAAC;MACvB,IAAI,CAACD,EAAE,IAAIC,EAAE,EAAE,OAAO,CAAC,CAAC;MACxB,OAAO,CAAC;IACV,CAAC,CAAC;EACJ;EACA,SAASC,YAAYA,CAAClB,GAAG,EAAE;IACzB,IAAI,CAACA,GAAG,CAACS,UAAU,CAAC,aAAa,CAAC,EAAE,OAAOT,GAAG;IAC9C,OAAOH,WAAW,CAACsB,YAAY,CAACnB,GAAG,CAACoB,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;EAClE;EACA,SAASC,OAAOA,CAACrB,GAAG,EAAE;IACpB,OAAOsB,OAAO,CAACC,GAAG,CAACrB,MAAM,EAAEF,GAAG,CAAC,IAAIA,GAAG;EACxC;EACA,OAAO;IACLK,IAAI;IACJK,IAAI;IACJJ,GAAG;IACHe,OAAO;IACPxB,WAAW,EAAEA,WAAW,CAACQ,IAAI,CAAC,CAAC;IAC/Ba;EACF,CAAC;AACH,CAAC;AAED,SAASvB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}