{"ast":null,"code":"\"use strict\";\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    return ref(value);\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  const availableRefs = refs.filter(ref => ref != null);\n  const cleanupMap = /* @__PURE__ */new Map();\n  return node => {\n    availableRefs.forEach(ref => {\n      const cleanup = assignRef(ref, node);\n      if (cleanup) {\n        cleanupMap.set(ref, cleanup);\n      }\n    });\n    return () => {\n      availableRefs.forEach(ref => {\n        const cleanup = cleanupMap.get(ref);\n        if (cleanup && typeof cleanup === \"function\") {\n          cleanup();\n        } else {\n          assignRef(ref, null);\n        }\n      });\n      cleanupMap.clear();\n    };\n  };\n}\nexport { assignRef, mergeRefs };","map":{"version":3,"names":["assignRef","ref","value","current","error","Error","mergeRefs","refs","availableRefs","filter","cleanupMap","Map","node","forEach","cleanup","set","get","clear"],"sources":["/Users/ameliamagick/personal-finance-tracker/node_modules/@chakra-ui/react/dist/esm/merge-refs.js"],"sourcesContent":["\"use strict\";\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    return ref(value);\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  const availableRefs = refs.filter((ref) => ref != null);\n  const cleanupMap = /* @__PURE__ */ new Map();\n  return (node) => {\n    availableRefs.forEach((ref) => {\n      const cleanup = assignRef(ref, node);\n      if (cleanup) {\n        cleanupMap.set(ref, cleanup);\n      }\n    });\n    return () => {\n      availableRefs.forEach((ref) => {\n        const cleanup = cleanupMap.get(ref);\n        if (cleanup && typeof cleanup === \"function\") {\n          cleanup();\n        } else {\n          assignRef(ref, null);\n        }\n      });\n      cleanupMap.clear();\n    };\n  };\n}\n\nexport { assignRef, mergeRefs };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAASA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC7B,IAAID,GAAG,IAAI,IAAI,EAAE;EACjB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAC7B,OAAOA,GAAG,CAACC,KAAK,CAAC;EACnB;EACA,IAAI;IACFD,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBH,KAAK,aAAaD,GAAG,GAAG,CAAC;EACnE;AACF;AACA,SAASK,SAASA,CAAC,GAAGC,IAAI,EAAE;EAC1B,MAAMC,aAAa,GAAGD,IAAI,CAACE,MAAM,CAAER,GAAG,IAAKA,GAAG,IAAI,IAAI,CAAC;EACvD,MAAMS,UAAU,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;EAC5C,OAAQC,IAAI,IAAK;IACfJ,aAAa,CAACK,OAAO,CAAEZ,GAAG,IAAK;MAC7B,MAAMa,OAAO,GAAGd,SAAS,CAACC,GAAG,EAAEW,IAAI,CAAC;MACpC,IAAIE,OAAO,EAAE;QACXJ,UAAU,CAACK,GAAG,CAACd,GAAG,EAAEa,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC;IACF,OAAO,MAAM;MACXN,aAAa,CAACK,OAAO,CAAEZ,GAAG,IAAK;QAC7B,MAAMa,OAAO,GAAGJ,UAAU,CAACM,GAAG,CAACf,GAAG,CAAC;QACnC,IAAIa,OAAO,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;UAC5CA,OAAO,CAAC,CAAC;QACX,CAAC,MAAM;UACLd,SAAS,CAACC,GAAG,EAAE,IAAI,CAAC;QACtB;MACF,CAAC,CAAC;MACFS,UAAU,CAACO,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC;AACH;AAEA,SAASjB,SAAS,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}