{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useMemo, isValidElement, cloneElement, Fragment, Children } from 'react';\nimport { chakra } from '../../styled-system/factory.js';\nimport { cx } from '../../utils/cx.js';\nimport { getSeparatorStyles } from './get-separator-style.js';\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(child => isValidElement(child));\n}\nconst Stack = forwardRef(function Stack2(props, ref) {\n  const {\n    direction = \"column\",\n    align,\n    justify,\n    gap = \"0.5rem\",\n    wrap,\n    children,\n    separator,\n    className,\n    ...rest\n  } = props;\n  const separatorStyle = useMemo(() => getSeparatorStyles({\n    gap,\n    direction\n  }), [gap, direction]);\n  const clones = useMemo(() => {\n    if (!isValidElement(separator)) return children;\n    return getValidChildren(children).map((child, index, arr) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const typedSep = separator;\n      const sep = cloneElement(typedSep, {\n        css: [separatorStyle, typedSep.props.css]\n      });\n      return /* @__PURE__ */jsxs(Fragment, {\n        children: [child, index === arr.length - 1 ? null : sep]\n      }, key);\n    });\n  }, [children, separator, separatorStyle]);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: direction,\n    flexWrap: wrap,\n    gap: separator ? void 0 : gap,\n    className: cx(\"chakra-stack\", className),\n    ...rest,\n    children: clones\n  });\n});\nexport { Stack };","map":{"version":3,"names":["jsxs","jsx","forwardRef","useMemo","isValidElement","cloneElement","Fragment","Children","chakra","cx","getSeparatorStyles","getValidChildren","children","toArray","filter","child","Stack","Stack2","props","ref","direction","align","justify","gap","wrap","separator","className","rest","separatorStyle","clones","map","index","arr","key","typedSep","sep","css","length","div","display","alignItems","justifyContent","flexDirection","flexWrap"],"sources":["/Users/ameliamagick/personal-finance-tracker/node_modules/@chakra-ui/react/dist/esm/components/stack/stack.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useMemo, isValidElement, cloneElement, Fragment, Children } from 'react';\nimport { chakra } from '../../styled-system/factory.js';\nimport { cx } from '../../utils/cx.js';\nimport { getSeparatorStyles } from './get-separator-style.js';\n\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nconst Stack = forwardRef(\n  function Stack2(props, ref) {\n    const {\n      direction = \"column\",\n      align,\n      justify,\n      gap = \"0.5rem\",\n      wrap,\n      children,\n      separator,\n      className,\n      ...rest\n    } = props;\n    const separatorStyle = useMemo(\n      () => getSeparatorStyles({ gap, direction }),\n      [gap, direction]\n    );\n    const clones = useMemo(() => {\n      if (!isValidElement(separator)) return children;\n      return getValidChildren(children).map((child, index, arr) => {\n        const key = typeof child.key !== \"undefined\" ? child.key : index;\n        const typedSep = separator;\n        const sep = cloneElement(typedSep, {\n          css: [separatorStyle, typedSep.props.css]\n        });\n        return /* @__PURE__ */ jsxs(Fragment, { children: [\n          child,\n          index === arr.length - 1 ? null : sep\n        ] }, key);\n      });\n    }, [children, separator, separatorStyle]);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        display: \"flex\",\n        alignItems: align,\n        justifyContent: justify,\n        flexDirection: direction,\n        flexWrap: wrap,\n        gap: separator ? void 0 : gap,\n        className: cx(\"chakra-stack\", className),\n        ...rest,\n        children: clones\n      }\n    );\n  }\n);\n\nexport { Stack };\n"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AACZ,SAASA,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAC7C,SAASC,UAAU,EAAEC,OAAO,EAAEC,cAAc,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC7F,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,kBAAkB,QAAQ,0BAA0B;AAE7D,SAASC,gBAAgBA,CAACC,QAAQ,EAAE;EAClC,OAAOL,QAAQ,CAACM,OAAO,CAACD,QAAQ,CAAC,CAACE,MAAM,CACrCC,KAAK,IAAKX,cAAc,CAACW,KAAK,CACjC,CAAC;AACH;AACA,MAAMC,KAAK,GAAGd,UAAU,CACtB,SAASe,MAAMA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC1B,MAAM;IACJC,SAAS,GAAG,QAAQ;IACpBC,KAAK;IACLC,OAAO;IACPC,GAAG,GAAG,QAAQ;IACdC,IAAI;IACJZ,QAAQ;IACRa,SAAS;IACTC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGT,KAAK;EACT,MAAMU,cAAc,GAAGzB,OAAO,CAC5B,MAAMO,kBAAkB,CAAC;IAAEa,GAAG;IAAEH;EAAU,CAAC,CAAC,EAC5C,CAACG,GAAG,EAAEH,SAAS,CACjB,CAAC;EACD,MAAMS,MAAM,GAAG1B,OAAO,CAAC,MAAM;IAC3B,IAAI,CAACC,cAAc,CAACqB,SAAS,CAAC,EAAE,OAAOb,QAAQ;IAC/C,OAAOD,gBAAgB,CAACC,QAAQ,CAAC,CAACkB,GAAG,CAAC,CAACf,KAAK,EAAEgB,KAAK,EAAEC,GAAG,KAAK;MAC3D,MAAMC,GAAG,GAAG,OAAOlB,KAAK,CAACkB,GAAG,KAAK,WAAW,GAAGlB,KAAK,CAACkB,GAAG,GAAGF,KAAK;MAChE,MAAMG,QAAQ,GAAGT,SAAS;MAC1B,MAAMU,GAAG,GAAG9B,YAAY,CAAC6B,QAAQ,EAAE;QACjCE,GAAG,EAAE,CAACR,cAAc,EAAEM,QAAQ,CAAChB,KAAK,CAACkB,GAAG;MAC1C,CAAC,CAAC;MACF,OAAO,eAAgBpC,IAAI,CAACM,QAAQ,EAAE;QAAEM,QAAQ,EAAE,CAChDG,KAAK,EACLgB,KAAK,KAAKC,GAAG,CAACK,MAAM,GAAG,CAAC,GAAG,IAAI,GAAGF,GAAG;MACrC,CAAC,EAAEF,GAAG,CAAC;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAACrB,QAAQ,EAAEa,SAAS,EAAEG,cAAc,CAAC,CAAC;EACzC,OAAO,eAAgB3B,GAAG,CACxBO,MAAM,CAAC8B,GAAG,EACV;IACEnB,GAAG;IACHoB,OAAO,EAAE,MAAM;IACfC,UAAU,EAAEnB,KAAK;IACjBoB,cAAc,EAAEnB,OAAO;IACvBoB,aAAa,EAAEtB,SAAS;IACxBuB,QAAQ,EAAEnB,IAAI;IACdD,GAAG,EAAEE,SAAS,GAAG,KAAK,CAAC,GAAGF,GAAG;IAC7BG,SAAS,EAAEjB,EAAE,CAAC,cAAc,EAAEiB,SAAS,CAAC;IACxC,GAAGC,IAAI;IACPf,QAAQ,EAAEiB;EACZ,CACF,CAAC;AACH,CACF,CAAC;AAED,SAASb,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}