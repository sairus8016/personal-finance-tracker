{"ast":null,"code":"var _jsxFileName = \"/Users/ameliamagick/personal-finance-tracker/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BudgetType from './Budget';\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { Stack } from \"@mui/material\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [budgets, setBudgets] = useState([]);\n  const [selectedBudgetId, setSelectedBudgetId] = useState(\"\");\n  const [selectedBudget, setSelectedBudget] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [newBudgetName, setNewBudgetName] = useState(\"\");\n  // const budgetId = \"68cdf096c35077c8f92b1f98\"; // hardcoded for now\n\n  // useEffect(() => {\n  //   fetch('http://localhost:5001/api/init', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     }\n  //   })\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       console.log(\"Created budget data\");\n  //       setLoading(false);\n  //   })\n  //   .catch((err) => {\n  //     console.error(\"Failed to create budget data:\", err);\n  //     setLoading(false);\n  //   });\n  // }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/budget\");\n      const data = await response.json();\n      // Normalize: always store an array\n      if (Array.isArray(data)) {\n        setBudgets(data);\n      } else if (Array.isArray(data.budgets)) {\n        setBudgets(data.budgets);\n      } else if (data) {\n        setBudgets([data]); // single object fallback\n      } else {\n        setBudgets([]);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch budgets:\", err);\n    }\n  };\n  const fetchBudgetById = async id => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:5001/api/budget/${id}`);\n      const data = await response.json();\n      console.log(\"Fetched budget data:\", data);\n      setSelectedBudget(data);\n    } catch (err) {\n      console.error(\"Failed to fetch budget data:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create new budget\n  const handleCreateBudget = async e => {\n    e.preventDefault();\n    if (!newBudgetName.trim()) return;\n    try {\n      const response = await fetch(\"http://localhost:5001/api/saveBudget\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newBudgetName\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create budget\");\n      const created = await response.json();\n      setNewBudgetName(\"\");\n      await fetchBudgets();\n      setSelectedBudgetId(created._id);\n      await fetchBudgetById(created._id);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  // Load selected budget when changed\n  useEffect(() => {\n    if (selectedBudgetId) {\n      fetchBudgetById(selectedBudgetId);\n    }\n  }, [selectedBudgetId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      sx: {\n        backgroundColor: \"#f5f5f5\",\n        padding: \"1rem\",\n        borderRadius: \"8px\",\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedBudgetId,\n          onChange: e => setSelectedBudgetId(e.target.value),\n          label: \"Budget\",\n          children: budgets.map(b => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: b._id,\n            children: b.name\n          }, b._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Budget Name\",\n          size: \"small\",\n          value: newBudgetName,\n          onChange: e => setNewBudgetName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCreateBudget,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : selectedBudget ? /*#__PURE__*/_jsxDEV(BudgetType, {\n      budgetId: selectedBudgetId,\n      incomeStreams: selectedBudget.incomeStreams,\n      expenses: selectedBudget.expenses,\n      onRefresh: () => fetchBudgetById(selectedBudgetId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Select or create a budget to begin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this)\n  // {budgets ? (\n  //   <BudgetType budgetId={budgetId} incomeStreams={budgets.incomeStreams} expenses={budgets.expenses} onRefresh={fetchBudgets} />\n  // ): (\n  //   <div>{loading ? \"Loading...\" : \"Failed to load budget data.\"}</div>\n  // )}\n  ;\n}\n_s(App, \"qnlmL4JTMUvWbZAALTnMSjCVe5g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BudgetType","Button","TextField","Select","MenuItem","InputLabel","FormControl","Stack","jsxDEV","_jsxDEV","App","_s","budgets","setBudgets","selectedBudgetId","setSelectedBudgetId","selectedBudget","setSelectedBudget","loading","setLoading","newBudgetName","setNewBudgetName","fetchBudgets","response","fetch","data","json","Array","isArray","err","console","error","fetchBudgetById","id","log","handleCreateBudget","e","preventDefault","trim","method","headers","body","JSON","stringify","name","ok","Error","created","_id","className","children","direction","spacing","alignItems","justifyContent","sx","backgroundColor","padding","borderRadius","marginBottom","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","label","map","b","size","variant","color","onClick","budgetId","incomeStreams","expenses","onRefresh","_c","$RefreshReg$"],"sources":["/Users/ameliamagick/personal-finance-tracker/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BudgetType from './Budget';\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { Card, CardContent, Typography, Stack } from \"@mui/material\";\nimport './App.css';\n\ninterface IncomeStreamProps {\n  _id: string;\n  name: string;\n  frequency: number;\n  amount: number;\n}\n\ninterface Expenses {\n  _id: string;\n  name: string;\n  amount: number;\n}\n\ninterface Budget {\n  _id: string,\n  name: string,\n  incomeStreams: IncomeStreamProps[];\n  expenses: Expenses[];\n}\n\nfunction App() {\n  const [budgets, setBudgets] = useState<Budget[]>([]);\n  const [selectedBudgetId, setSelectedBudgetId] = useState<string>(\"\");\n  const [selectedBudget, setSelectedBudget] = useState<Budget | null>(null);  \n  const [loading, setLoading] = useState<boolean>(true);\n  const [newBudgetName, setNewBudgetName] = useState(\"\");\n  // const budgetId = \"68cdf096c35077c8f92b1f98\"; // hardcoded for now\n\n  // useEffect(() => {\n  //   fetch('http://localhost:5001/api/init', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     }\n  //   })\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       console.log(\"Created budget data\");\n  //       setLoading(false);\n  //   })\n  //   .catch((err) => {\n  //     console.error(\"Failed to create budget data:\", err);\n  //     setLoading(false);\n  //   });\n  // }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/budget\");\n      const data = await response.json();\n      // Normalize: always store an array\n      if (Array.isArray(data)) {\n        setBudgets(data);\n      } else if (Array.isArray(data.budgets)) {\n        setBudgets(data.budgets);\n      } else if (data) {\n        setBudgets([data]); // single object fallback\n      } else {\n        setBudgets([]);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch budgets:\", err);\n    }\n  };\n\n  const fetchBudgetById = async (id: string) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:5001/api/budget/${id}`);\n      const data = await response.json();\n      console.log(\"Fetched budget data:\", data);\n      setSelectedBudget(data);\n    } catch (err) {\n      console.error(\"Failed to fetch budget data:\", err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Create new budget\n  const handleCreateBudget = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newBudgetName.trim()) return;\n\n    try {\n      const response = await fetch(\"http://localhost:5001/api/saveBudget\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: newBudgetName }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to create budget\");\n      const created = await response.json();\n\n      setNewBudgetName(\"\");\n      await fetchBudgets();\n      setSelectedBudgetId(created._id);\n      await fetchBudgetById(created._id);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  // Load selected budget when changed\n  useEffect(() => {\n    if (selectedBudgetId) {\n      fetchBudgetById(selectedBudgetId);\n    }\n  }, [selectedBudgetId]);\n\n  return (\n    <div className=\"App\">\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{\n          backgroundColor: \"#f5f5f5\",\n          padding: \"1rem\",\n          borderRadius: \"8px\",\n          marginBottom: \"1rem\"\n        }}\n      >\n        <FormControl sx={{ minWidth: 200 }}>\n          <InputLabel>Budget</InputLabel>\n          <Select\n            value={selectedBudgetId}\n            onChange={(e) => setSelectedBudgetId(e.target.value)}\n            label=\"Budget\"\n          >\n            {budgets.map((b) => (\n              <MenuItem key={b._id} value={b._id}>{b.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Stack direction=\"row\" spacing={1}>\n          <TextField\n            label=\"New Budget Name\"\n            size=\"small\"\n            value={newBudgetName}\n            onChange={(e) => setNewBudgetName(e.target.value)}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleCreateBudget}>\n            Add\n          </Button>\n        </Stack>\n      </Stack>\n\n      {/* Budget content */}\n      {loading ? (\n        <div>Loading...</div>\n      ) : selectedBudget ? (\n        <BudgetType\n          budgetId={selectedBudgetId}\n          incomeStreams={selectedBudget.incomeStreams}\n          expenses={selectedBudget.expenses}\n          onRefresh={() => fetchBudgetById(selectedBudgetId)}\n        />\n      ) : (\n        <div>Select or create a budget to begin.</div>\n      )}\n    </div>\n      // {budgets ? (\n      //   <BudgetType budgetId={budgetId} incomeStreams={budgets.incomeStreams} expenses={budgets.expenses} onRefresh={fetchBudgets} />\n      // ): (\n      //   <div>{loading ? \"Loading...\" : \"Failed to load budget data.\"}</div>\n      // )}\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}