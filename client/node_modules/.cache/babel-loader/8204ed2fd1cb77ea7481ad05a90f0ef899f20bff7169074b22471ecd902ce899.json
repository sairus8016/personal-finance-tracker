{"ast":null,"code":"var _jsxFileName = \"/Users/benbates/personal-finance-tracker/personal-finance-tracker/client/src/Budget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Budget.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomeStream = ({\n  _id,\n  name,\n  amount,\n  frequency,\n  onRefresh\n}) => {\n  // delete handler\n  async function handleDelete(incomeId, onRefresh) {\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomeDelete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          incomeId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to delete income\");\n      console.log(\"Income deleted\");\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: [\"$\", amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: frequency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: () => handleDelete(_id, onRefresh),\n        className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n        children: \"Delete Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = IncomeStream;\nconst Expense = ({\n  _id,\n  name,\n  amount,\n  onRefresh\n}) => {\n  // delete handler\n  async function handleDelete(expenseId, onRefresh) {\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenseDelete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          expenseId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to delete expense\");\n      console.log(\"Expense deleted\");\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: [\"$\", amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: () => handleDelete(_id, onRefresh),\n        className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n        children: \"Delete Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Expense;\nconst Budget = ({\n  budgetId,\n  incomeStreams,\n  expenses,\n  onRefresh\n}) => {\n  _s();\n  const [newIncomeName, setNewIncomeName] = useState(\"\");\n  const [newIncomeValue, setNewIncomeValue] = useState(\"\");\n  const [newFrequencyValue, setNewFrequencyValue] = useState(1); // default to monthly\n\n  const [newExpenseName, setNewExpenseName] = useState(\"\");\n  const [newExpenseValue, setNewExpenseValue] = useState(\"\");\n\n  // change handler for textbox\n  function changeNewIncomeName(e) {\n    setNewIncomeName(e.target.value);\n  }\n  function changeNewIncomeValue(e) {\n    setNewIncomeValue(e.target.value);\n  }\n  function changeNewFrequencyValue(e) {\n    setNewFrequencyValue(Number(e.target.value));\n  }\n  function changeNewExpenseName(e) {\n    setNewExpenseName(e.target.value);\n  }\n  function changeNewExpenseValue(e) {\n    setNewExpenseValue(e.target.value);\n  }\n\n  // submit handler\n  async function handleIncomeSubmit(e) {\n    e.preventDefault();\n    if (!newIncomeName.trim()) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomes`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newIncomeName,\n          amount: newIncomeValue,\n          // you can extend this later for user input\n          frequency: newFrequencyValue,\n          budgetId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create income\");\n      setNewIncomeName(\"\");\n      setNewIncomeValue(\"\");\n      setNewFrequencyValue(0); // clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!newExpenseName.trim()) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenses`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newExpenseName,\n          amount: newExpenseValue,\n          // you can extend this later for user input\n          budgetId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create expense\");\n      setNewExpenseName(\"\");\n      setNewExpenseValue(\"\"); // clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Budget\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"  \", /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"simple-select-label\",\n        id: \"simple-select\",\n        value: budgetId\n        // onChange={handleChange}\n        ,\n        label: \"Select Budget\",\n        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"68cdf096c35077c8f92b1f98\",\n          children: \"Ben's Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        value: \"Go\",\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Income Streams:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: incomeStreams.map((stream, index) => /*#__PURE__*/_jsxDEV(IncomeStream, {\n            ...stream,\n            onRefresh: onRefresh\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleIncomeSubmit,\n        className: \"flex gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          placeholder: \"New income name\",\n          value: newIncomeName,\n          onChange: changeNewIncomeName,\n          className: \"border rounded px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          placeholder: \"New income value\",\n          value: newIncomeValue,\n          onChange: changeNewIncomeValue,\n          className: \"border rounded px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          placeholder: \"New frequency value\",\n          value: newFrequencyValue,\n          onChange: changeNewFrequencyValue,\n          className: \"border rounded px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          type: \"submit\",\n          className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n          children: \"Add Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(Expense, {\n          ...expense,\n          onRefresh: onRefresh\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex gap-2 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"text\",\n        placeholder: \"New expense name\",\n        value: newExpenseName,\n        onChange: changeNewExpenseName,\n        className: \"border rounded px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"text\",\n        placeholder: \"New expense value\",\n        value: newExpenseValue,\n        onChange: changeNewExpenseValue,\n        className: \"border rounded px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"KMnq/poHiHaEDPRHQ8e/xM95LFQ=\");\n_c3 = Budget;\nexport default Budget;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"IncomeStream\");\n$RefreshReg$(_c2, \"Expense\");\n$RefreshReg$(_c3, \"Budget\");","map":{"version":3,"names":["React","useState","Button","TextField","Select","MenuItem","Table","TableBody","TableCell","TableHead","TableRow","jsxDEV","_jsxDEV","IncomeStream","_id","name","amount","frequency","onRefresh","handleDelete","incomeId","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","log","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","className","_c","Expense","expenseId","_c2","Budget","budgetId","incomeStreams","expenses","_s","newIncomeName","setNewIncomeName","newIncomeValue","setNewIncomeValue","newFrequencyValue","setNewFrequencyValue","newExpenseName","setNewExpenseName","newExpenseValue","setNewExpenseValue","changeNewIncomeName","e","target","value","changeNewIncomeValue","changeNewFrequencyValue","Number","changeNewExpenseName","changeNewExpenseValue","handleIncomeSubmit","preventDefault","trim","handleSubmit","labelId","id","label","type","map","stream","index","onSubmit","size","placeholder","onChange","expense","_c3","$RefreshReg$"],"sources":["/Users/benbates/personal-finance-tracker/personal-finance-tracker/client/src/Budget.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Budget.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\ntype IncomeStreamProps = {\n  _id: string;\n  name: string;\n  amount: number;\n  frequency: number;\n  onRefresh?: () => void; // optional callback to refresh the list after adding\n};\n\nconst IncomeStream: React.FC<IncomeStreamProps> = ({ _id, name, amount, frequency, onRefresh }) => {\n  // delete handler\n  async function handleDelete(incomeId: string, onRefresh?: () => void) {\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomeDelete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          incomeId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete income\");\n\n      console.log(\"Income deleted\");\n\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  \n  return (\n    <TableRow>\n      <TableCell>{name}</TableCell>\n      <TableCell>${amount}</TableCell>\n      <TableCell>{frequency}</TableCell>\n      <TableCell>\n        <Button variant=\"outlined\" color=\"error\" onClick={() => handleDelete(_id, onRefresh)} className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n          Delete Income\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n\ntype ExpenseProps = {\n  _id: string;\n  name: string;\n  amount: number;\n  onRefresh?: () => void; // optional callback to refresh the list after deleting\n};\n\nconst Expense: React.FC<ExpenseProps> = ({ _id, name, amount, onRefresh }) => {\n  // delete handler\n  async function handleDelete(expenseId: string, onRefresh?: () => void) {\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenseDelete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          expenseId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete expense\");\n\n      console.log(\"Expense deleted\");\n\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <TableRow>\n      <TableCell>{name}</TableCell>\n      <TableCell>${amount}</TableCell>\n      <TableCell>\n        <Button variant=\"outlined\" color=\"error\" onClick={() => handleDelete(_id, onRefresh)} className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n          Delete Expense\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n\ntype BudgetProps = {\n  budgetId: string;\n  incomeStreams: IncomeStreamProps[];\n  expenses: ExpenseProps[];\n  onRefresh?: () => void; // optional callback to refresh the list after adding\n};\n\nconst Budget: React.FC<BudgetProps> = ({ budgetId, incomeStreams, expenses, onRefresh }) => {\n\n  const [newIncomeName, setNewIncomeName] = useState(\"\");\n  const [newIncomeValue, setNewIncomeValue] = useState(\"\");\n  const [newFrequencyValue, setNewFrequencyValue] = useState(1); // default to monthly\n  \n  const [newExpenseName, setNewExpenseName] = useState(\"\");\n  const [newExpenseValue, setNewExpenseValue] = useState(\"\");\n\n  // change handler for textbox\n  function changeNewIncomeName(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewIncomeName(e.target.value);\n  }\n  function changeNewIncomeValue(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewIncomeValue(e.target.value);\n  }\n  function changeNewFrequencyValue(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewFrequencyValue(Number(e.target.value));\n  }\n  function changeNewExpenseName(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewExpenseName(e.target.value);\n  }\n  function changeNewExpenseValue(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewExpenseValue(e.target.value);\n  }\n\n  // submit handler\n  async function handleIncomeSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (!newIncomeName.trim()) return;\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomes`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: newIncomeName,\n          amount: newIncomeValue, // you can extend this later for user input\n          frequency: newFrequencyValue,\n          budgetId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to create income\");\n\n      setNewIncomeName(\"\"); setNewIncomeValue(\"\"); setNewFrequencyValue(0);// clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (!newExpenseName.trim()) return;\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenses`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: newExpenseName,\n          amount: newExpenseValue, // you can extend this later for user input\n          budgetId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to create expense\");\n\n      setNewExpenseName(\"\"); setNewExpenseValue(\"\"); // clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <div className=\"Budget\">\n      <form>  {/*later add onSubmit handler*/}\n        {/* <InputLabel id=\"simple-select-label\">Select Budget</InputLabel> */}\n        <Select\n          labelId=\"simple-select-label\"\n          id=\"simple-select\"\n          value={budgetId}\n          // onChange={handleChange}\n          label=\"Select Budget\"\n        >\n          <MenuItem value={\"68cdf096c35077c8f92b1f98\"}>Ben's Budget</MenuItem>\n        </Select>\n        <Button variant=\"contained\" type=\"submit\" value=\"Go\">Go</Button>\n      </form>\n      <h1>Monthly Budget</h1>\n\n      <div>\n        <h2>Income Streams:</h2>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Frequency</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {incomeStreams.map((stream, index) => (\n              <IncomeStream key={index} {...stream} onRefresh={onRefresh}/>\n            ))}\n          </TableBody>\n        </Table>\n        <form onSubmit={handleIncomeSubmit} className=\"flex gap-2 items-center\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"text\"\n            placeholder=\"New income name\"\n            value={newIncomeName}\n            onChange={changeNewIncomeName}\n            className=\"border rounded px-2 py-1\"\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"text\"\n            placeholder=\"New income value\"\n            value={newIncomeValue}\n            onChange={changeNewIncomeValue}\n            className=\"border rounded px-2 py-1\"\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"text\"\n            placeholder=\"New frequency value\"\n            value={newFrequencyValue}\n            onChange={changeNewFrequencyValue}\n            className=\"border rounded px-2 py-1\"\n          />\n          <Button variant=\"contained\" color=\"success\" type=\"submit\" className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n            Add Income\n          </Button>\n        </form>\n      </div>\n\n      <h2>Expenses</h2>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {expenses.map((expense, index) => (\n            <Expense key={index} {...expense} onRefresh={onRefresh}/>\n          ))}\n        </TableBody>\n      </Table>\n\n      <form onSubmit={handleSubmit} className=\"flex gap-2 items-center\">\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"text\"\n          placeholder=\"New expense name\"\n          value={newExpenseName}\n          onChange={changeNewExpenseName}\n          className=\"border rounded px-2 py-1\"\n        />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"text\"\n          placeholder=\"New expense value\"\n          value={newExpenseValue}\n          onChange={changeNewExpenseValue}\n          className=\"border rounded px-2 py-1\"\n        />\n        <Button variant=\"contained\" color=\"success\" type=\"submit\" className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n          Add Expense\n        </Button>\n      </form>\n      {/* Total Income: $4000/month<br />\n      Total Expenses: $2180/month<br />\n      Net Savings: $1820/month<br /> */}\n    </div>\n  );\n};\n\nexport default Budget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}