{"ast":null,"code":"var _jsxFileName = \"/Users/ameliamagick/personal-finance-tracker/client/src/Budget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Budget.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IncomeStream = ({\n  _id,\n  name,\n  amount,\n  frequency,\n  onRefresh\n}) => {\n  // delete handler\n  async function handleDelete(incomeId, onRefresh) {\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomeDelete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          incomeId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to delete income\");\n      console.log(\"Income deleted\");\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"nameCell\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"amountCell\",\n      children: [\"$\", amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"amountCell\",\n      children: frequency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"utilCell\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: () => handleDelete(_id, onRefresh),\n        className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n        children: \"Delete Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = IncomeStream;\nconst Expense = ({\n  _id,\n  name,\n  amount,\n  onRefresh\n}) => {\n  // delete handler\n  async function handleDelete(expenseId, onRefresh) {\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenseDelete`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          expenseId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to delete expense\");\n      console.log(\"Expense deleted\");\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"nameCell\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"amountCell\",\n      children: [\"$\", amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"utilCell\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: () => handleDelete(_id, onRefresh),\n        className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n        children: \"Delete Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Expense;\nconst Budget = ({\n  budgetId,\n  incomeStreams,\n  expenses,\n  onRefresh\n}) => {\n  _s();\n  const [newIncomeName, setNewIncomeName] = useState(\"\");\n  const [newIncomeValue, setNewIncomeValue] = useState(\"\");\n  const [newFrequencyValue, setNewFrequencyValue] = useState(1); // default to monthly\n\n  const [newExpenseName, setNewExpenseName] = useState(\"\");\n  const [newExpenseValue, setNewExpenseValue] = useState(\"\");\n\n  // change handler for textbox\n  function changeNewIncomeName(e) {\n    setNewIncomeName(e.target.value);\n  }\n  function changeNewIncomeValue(e) {\n    setNewIncomeValue(e.target.value);\n  }\n  function changeNewFrequencyValue(e) {\n    setNewFrequencyValue(Number(e.target.value));\n  }\n  function changeNewExpenseName(e) {\n    setNewExpenseName(e.target.value);\n  }\n  function changeNewExpenseValue(e) {\n    setNewExpenseValue(e.target.value);\n  }\n\n  // submit handler\n  async function handleIncomeSubmit(e) {\n    e.preventDefault();\n    if (!newIncomeName.trim()) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomes`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newIncomeName,\n          amount: newIncomeValue,\n          // you can extend this later for user input\n          frequency: newFrequencyValue,\n          budgetId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create income\");\n      setNewIncomeName(\"\");\n      setNewIncomeValue(\"\");\n      setNewFrequencyValue(0); // clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!newExpenseName.trim()) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenses`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newExpenseName,\n          amount: newExpenseValue,\n          // you can extend this later for user input\n          budgetId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create expense\");\n      setNewExpenseName(\"\");\n      setNewExpenseValue(\"\"); // clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Budget\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          lg: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Income Streams:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Frequency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Util\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: incomeStreams.map((stream, index) => /*#__PURE__*/_jsxDEV(IncomeStream, {\n                ...stream,\n                onRefresh: onRefresh\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleIncomeSubmit,\n            className: \"flex gap-2 items-center\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              type: \"text\",\n              placeholder: \"New income name\",\n              value: newIncomeName,\n              onChange: changeNewIncomeName,\n              className: \"border rounded px-2 py-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              type: \"text\",\n              placeholder: \"New income value\",\n              value: newIncomeValue,\n              onChange: changeNewIncomeValue,\n              className: \"border rounded px-2 py-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              type: \"text\",\n              placeholder: \"New frequency value\",\n              value: newFrequencyValue,\n              onChange: changeNewFrequencyValue,\n              className: \"border rounded px-2 py-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              type: \"submit\",\n              className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n              children: \"Add Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Util\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(Expense, {\n              ...expense,\n              onRefresh: onRefresh\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            placeholder: \"New expense name\",\n            value: newExpenseName,\n            onChange: changeNewExpenseName,\n            className: \"border rounded px-2 py-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            type: \"text\",\n            placeholder: \"New expense value\",\n            value: newExpenseValue,\n            onChange: changeNewExpenseValue,\n            className: \"border rounded px-2 py-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            type: \"submit\",\n            className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          lg: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totalsSection\",\n          style: {\n            marginTop: \"2rem\",\n            padding: \"1rem\"\n          },\n          children: (() => {\n            // Calculate totals\n            const totalIncome = incomeStreams.reduce((sum, income) => sum + (income.amount || 0) * (income.frequency || 1), 0);\n            const totalExpenses = expenses.reduce((sum, expense) => sum + (expense.amount || 0), 0);\n            const netSavings = totalIncome - totalExpenses;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Totals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total Income:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 22\n                }, this), \" $\", totalIncome.toFixed(2), \" / month\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total Expenses:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 22\n                }, this), \" $\", totalExpenses.toFixed(2), \" / month\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: netSavings >= 0 ? \"green\" : \"red\",\n                  fontWeight: \"bold\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Net Savings:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), \" $\", netSavings.toFixed(2), \" / month\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"KMnq/poHiHaEDPRHQ8e/xM95LFQ=\");\n_c3 = Budget;\nexport default Budget;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"IncomeStream\");\n$RefreshReg$(_c2, \"Expense\");\n$RefreshReg$(_c3, \"Budget\");","map":{"version":3,"names":["React","useState","Button","TextField","Table","TableBody","TableCell","TableHead","TableRow","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","IncomeStream","_id","name","amount","frequency","onRefresh","handleDelete","incomeId","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","log","err","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","_c","Expense","expenseId","_c2","Budget","budgetId","incomeStreams","expenses","_s","newIncomeName","setNewIncomeName","newIncomeValue","setNewIncomeValue","newFrequencyValue","setNewFrequencyValue","newExpenseName","setNewExpenseName","newExpenseValue","setNewExpenseValue","changeNewIncomeName","e","target","value","changeNewIncomeValue","changeNewFrequencyValue","Number","changeNewExpenseName","changeNewExpenseValue","handleIncomeSubmit","preventDefault","trim","handleSubmit","container","spacing","size","xs","lg","map","stream","index","onSubmit","type","placeholder","onChange","expense","style","marginTop","padding","totalIncome","reduce","sum","income","totalExpenses","netSavings","toFixed","fontWeight","_c3","$RefreshReg$"],"sources":["/Users/ameliamagick/personal-finance-tracker/client/src/Budget.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Budget.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\ntype IncomeStreamProps = {\n  _id: string;\n  name: string;\n  amount: number;\n  frequency: number;\n  onRefresh?: () => void; // optional callback to refresh the list after adding\n};\n\nconst IncomeStream: React.FC<IncomeStreamProps> = ({ _id, name, amount, frequency, onRefresh }) => {\n  // delete handler\n  async function handleDelete(incomeId: string, onRefresh?: () => void) {\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomeDelete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          incomeId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete income\");\n\n      console.log(\"Income deleted\");\n\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  \n  return (\n    <TableRow>\n      <TableCell className=\"nameCell\">{name}</TableCell>\n      <TableCell className=\"amountCell\">${amount}</TableCell>\n      <TableCell className=\"amountCell\">{frequency}</TableCell>\n      <TableCell className=\"utilCell\">\n        <Button variant=\"outlined\" color=\"error\" onClick={() => handleDelete(_id, onRefresh)} className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n          Delete Income\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n\ntype ExpenseProps = {\n  _id: string;\n  name: string;\n  amount: number;\n  onRefresh?: () => void; // optional callback to refresh the list after deleting\n};\n\nconst Expense: React.FC<ExpenseProps> = ({ _id, name, amount, onRefresh }) => {\n  // delete handler\n  async function handleDelete(expenseId: string, onRefresh?: () => void) {\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenseDelete`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          expenseId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete expense\");\n\n      console.log(\"Expense deleted\");\n\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <TableRow>\n      <TableCell className=\"nameCell\">{name}</TableCell>\n      <TableCell className=\"amountCell\">${amount}</TableCell>\n      <TableCell className=\"utilCell\">\n        <Button variant=\"outlined\" color=\"error\" onClick={() => handleDelete(_id, onRefresh)} className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n          Delete Expense\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n\ntype BudgetProps = {\n  budgetId: string;\n  incomeStreams: IncomeStreamProps[];\n  expenses: ExpenseProps[];\n  onRefresh?: () => void; // optional callback to refresh the list after adding\n};\n\nconst Budget: React.FC<BudgetProps> = ({ budgetId, incomeStreams, expenses, onRefresh }) => {\n\n  const [newIncomeName, setNewIncomeName] = useState(\"\");\n  const [newIncomeValue, setNewIncomeValue] = useState(\"\");\n  const [newFrequencyValue, setNewFrequencyValue] = useState(1); // default to monthly\n  \n  const [newExpenseName, setNewExpenseName] = useState(\"\");\n  const [newExpenseValue, setNewExpenseValue] = useState(\"\");\n\n  // change handler for textbox\n  function changeNewIncomeName(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewIncomeName(e.target.value);\n  }\n  function changeNewIncomeValue(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewIncomeValue(e.target.value);\n  }\n  function changeNewFrequencyValue(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewFrequencyValue(Number(e.target.value));\n  }\n  function changeNewExpenseName(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewExpenseName(e.target.value);\n  }\n  function changeNewExpenseValue(e: React.ChangeEvent<HTMLInputElement>) {\n    setNewExpenseValue(e.target.value);\n  }\n\n  // submit handler\n  async function handleIncomeSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (!newIncomeName.trim()) return;\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/incomes`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: newIncomeName,\n          amount: newIncomeValue, // you can extend this later for user input\n          frequency: newFrequencyValue,\n          budgetId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to create income\");\n\n      setNewIncomeName(\"\"); setNewIncomeValue(\"\"); setNewFrequencyValue(0);// clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh income list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (!newExpenseName.trim()) return;\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/expenses`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: newExpenseName,\n          amount: newExpenseValue, // you can extend this later for user input\n          budgetId,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to create expense\");\n\n      setNewExpenseName(\"\"); setNewExpenseValue(\"\"); // clear textboxes\n      if (onRefresh) onRefresh(); // let parent refresh expense list\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <div className=\"Budget\">\n      {/*<form>\n        <Select\n          labelId=\"simple-select-label\"\n          id=\"simple-select\"\n          value={budgetId}\n          // onChange={handleChange}\n          label=\"Select Budget\"\n        >\n          <MenuItem value={\"68cdf096c35077c8f92b1f98\"}>Ben's Budget</MenuItem>\n        </Select>\n        <Button variant=\"contained\" type=\"submit\" value=\"Go\">Go</Button>\n      </form> */}\n      <h1>Monthly Budget</h1>\n\n      <Grid container spacing={2}>\n        <Grid size={{ xs: 12, lg: 8}}>\n          <div>\n            <h2>Income Streams:</h2>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Frequency</TableCell>\n                  <TableCell>Util</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {incomeStreams.map((stream, index) => (\n                  <IncomeStream key={index} {...stream} onRefresh={onRefresh}/>\n                ))}\n              </TableBody>\n            </Table>\n            <form onSubmit={handleIncomeSubmit} className=\"flex gap-2 items-center\">\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"text\"\n                placeholder=\"New income name\"\n                value={newIncomeName}\n                onChange={changeNewIncomeName}\n                className=\"border rounded px-2 py-1\"\n              />\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"text\"\n                placeholder=\"New income value\"\n                value={newIncomeValue}\n                onChange={changeNewIncomeValue}\n                className=\"border rounded px-2 py-1\"\n              />\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"text\"\n                placeholder=\"New frequency value\"\n                value={newFrequencyValue}\n                onChange={changeNewFrequencyValue}\n                className=\"border rounded px-2 py-1\"\n              />\n              <Button variant=\"contained\" color=\"success\" type=\"submit\" className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n                Add Income\n              </Button>\n            </form>\n          </div>\n\n          <h2>Expenses</h2>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Util</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {expenses.map((expense, index) => (\n                <Expense key={index} {...expense} onRefresh={onRefresh}/>\n              ))}\n            </TableBody>\n          </Table>\n\n          <form onSubmit={handleSubmit} className=\"flex gap-2 items-center\">\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              placeholder=\"New expense name\"\n              value={newExpenseName}\n              onChange={changeNewExpenseName}\n              className=\"border rounded px-2 py-1\"\n            />\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              placeholder=\"New expense value\"\n              value={newExpenseValue}\n              onChange={changeNewExpenseValue}\n              className=\"border rounded px-2 py-1\"\n            />\n            <Button variant=\"contained\" color=\"success\" type=\"submit\" className=\"bg-blue-500 text-white px-3 py-1 rounded\">\n              Add Expense\n            </Button>\n          </form>\n        </Grid>\n        <Grid size={{xs: 12, lg: 4}}>\n          {/* Totals Section */}\n          <div className=\"totalsSection\" style={{ marginTop: \"2rem\", padding: \"1rem\" }}>\n            {(() => {\n              // Calculate totals\n              const totalIncome = incomeStreams.reduce(\n                (sum, income) => sum + (income.amount || 0) * (income.frequency || 1),\n                0\n              );\n              const totalExpenses = expenses.reduce(\n                (sum, expense) => sum + (expense.amount || 0),\n                0\n              );\n              const netSavings = totalIncome - totalExpenses;\n\n              return (\n                <>\n                  <h2>Totals</h2>\n                  <p><strong>Total Income:</strong> ${totalIncome.toFixed(2)} / month</p>\n                  <p><strong>Total Expenses:</strong> ${totalExpenses.toFixed(2)} / month</p>\n                  <p\n                    style={{\n                      color: netSavings >= 0 ? \"green\" : \"red\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    <strong>Net Savings:</strong> ${netSavings.toFixed(2)} / month\n                  </p>\n                </>\n              );\n            })()}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Budget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}