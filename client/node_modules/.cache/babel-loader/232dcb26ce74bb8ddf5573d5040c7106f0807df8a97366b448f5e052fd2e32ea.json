{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, addDomEvent, isSafari, requestPointerLock, observeAttributes, trackFormControl, MAX_Z_INDEX, dataAttr, isLeftClick, getEventPoint, getWindow, ariaAttr, isComposingEvent, getEventStep, isModifierKey } from '@zag-js/dom-query';\nimport { isValueAtMax, isValueAtMin, clampValue, decrementValue, incrementValue, callAll, isValueWithinRange, createSplitProps, roundToDpr, wrap } from '@zag-js/utils';\nimport { setup, memo } from '@zag-js/core';\nimport { NumberParser } from '@internationalized/number';\nimport { createProps } from '@zag-js/types';\n\n// src/number-input.anatomy.ts\nvar anatomy = createAnatomy(\"numberInput\").parts(\"root\", \"label\", \"input\", \"control\", \"valueText\", \"incrementTrigger\", \"decrementTrigger\", \"scrubber\");\nvar parts = anatomy.build();\nvar getRootId = ctx => ctx.ids?.root ?? `number-input:${ctx.id}`;\nvar getInputId = ctx => ctx.ids?.input ?? `number-input:${ctx.id}:input`;\nvar getIncrementTriggerId = ctx => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`;\nvar getDecrementTriggerId = ctx => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`;\nvar getScrubberId = ctx => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`;\nvar getCursorId = ctx => `number-input:${ctx.id}:cursor`;\nvar getLabelId = ctx => ctx.ids?.label ?? `number-input:${ctx.id}:label`;\nvar getInputEl = ctx => ctx.getById(getInputId(ctx));\nvar getIncrementTriggerEl = ctx => ctx.getById(getIncrementTriggerId(ctx));\nvar getDecrementTriggerEl = ctx => ctx.getById(getDecrementTriggerId(ctx));\nvar getCursorEl = ctx => ctx.getDoc().getElementById(getCursorId(ctx));\nvar getPressedTriggerEl = (ctx, hint) => {\n  let btnEl = null;\n  if (hint === \"increment\") {\n    btnEl = getIncrementTriggerEl(ctx);\n  }\n  if (hint === \"decrement\") {\n    btnEl = getDecrementTriggerEl(ctx);\n  }\n  return btnEl;\n};\nvar setupVirtualCursor = (ctx, point) => {\n  if (isSafari()) return;\n  createVirtualCursor(ctx, point);\n  return () => {\n    getCursorEl(ctx)?.remove();\n  };\n};\nvar preventTextSelection = ctx => {\n  const doc = ctx.getDoc();\n  const html = doc.documentElement;\n  const body = doc.body;\n  body.style.pointerEvents = \"none\";\n  html.style.userSelect = \"none\";\n  html.style.cursor = \"ew-resize\";\n  return () => {\n    body.style.pointerEvents = \"\";\n    html.style.userSelect = \"\";\n    html.style.cursor = \"\";\n    if (!html.style.length) {\n      html.removeAttribute(\"style\");\n    }\n    if (!body.style.length) {\n      body.removeAttribute(\"style\");\n    }\n  };\n};\nvar getMousemoveValue = (ctx, opts) => {\n  const {\n    point,\n    isRtl,\n    event\n  } = opts;\n  const win = ctx.getWin();\n  const x = roundToDpr(event.movementX, win.devicePixelRatio);\n  const y = roundToDpr(event.movementY, win.devicePixelRatio);\n  let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n  if (isRtl && hint === \"increment\") hint = \"decrement\";\n  if (isRtl && hint === \"decrement\") hint = \"increment\";\n  const newPoint = {\n    x: point.x + x,\n    y: point.y + y\n  };\n  const width = win.innerWidth;\n  const half = roundToDpr(7.5, win.devicePixelRatio);\n  newPoint.x = wrap(newPoint.x + half, width) - half;\n  return {\n    hint,\n    point: newPoint\n  };\n};\nvar createVirtualCursor = (ctx, point) => {\n  const doc = ctx.getDoc();\n  const el = doc.createElement(\"div\");\n  el.className = \"scrubber--cursor\";\n  el.id = getCursorId(ctx);\n  Object.assign(el.style, {\n    width: \"15px\",\n    height: \"15px\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: MAX_Z_INDEX,\n    transform: point ? `translate3d(${point.x}px, ${point.y}px, 0px)` : void 0,\n    willChange: \"transform\"\n  });\n  el.innerHTML = `\n      <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n        <g transform=\"translate(2 3)\">\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n        </g>\n      </svg>`;\n  doc.body.appendChild(el);\n};\n\n// src/cursor.ts\nfunction recordCursor(inputEl, scope) {\n  if (!inputEl || !scope.isActiveElement(inputEl)) return;\n  try {\n    const {\n      selectionStart: start,\n      selectionEnd: end,\n      value\n    } = inputEl;\n    if (start == null || end == null) return void 0;\n    return {\n      start,\n      end,\n      value\n    };\n  } catch {\n    return void 0;\n  }\n}\nfunction restoreCursor(inputEl, selection, scope) {\n  if (!inputEl || !scope.isActiveElement(inputEl)) return;\n  if (!selection) {\n    const len = inputEl.value.length;\n    inputEl.setSelectionRange(len, len);\n    return;\n  }\n  try {\n    const newValue = inputEl.value;\n    const {\n      start,\n      end,\n      value: oldValue\n    } = selection;\n    if (newValue === oldValue) {\n      inputEl.setSelectionRange(start, end);\n      return;\n    }\n    const newStart = getNewCursorPosition(oldValue, newValue, start);\n    const newEnd = start === end ? newStart : getNewCursorPosition(oldValue, newValue, end);\n    const clampedStart = Math.max(0, Math.min(newStart, newValue.length));\n    const clampedEnd = Math.max(clampedStart, Math.min(newEnd, newValue.length));\n    inputEl.setSelectionRange(clampedStart, clampedEnd);\n  } catch {\n    const len = inputEl.value.length;\n    inputEl.setSelectionRange(len, len);\n  }\n}\nfunction getNewCursorPosition(oldValue, newValue, oldPosition) {\n  const beforeCursor = oldValue.slice(0, oldPosition);\n  const afterCursor = oldValue.slice(oldPosition);\n  let prefixLength = 0;\n  const maxPrefixLength = Math.min(beforeCursor.length, newValue.length);\n  for (let i = 0; i < maxPrefixLength; i++) {\n    if (beforeCursor[i] === newValue[i]) {\n      prefixLength = i + 1;\n    } else {\n      break;\n    }\n  }\n  let suffixLength = 0;\n  const maxSuffixLength = Math.min(afterCursor.length, newValue.length - prefixLength);\n  for (let i = 0; i < maxSuffixLength; i++) {\n    const oldIndex = afterCursor.length - 1 - i;\n    const newIndex = newValue.length - 1 - i;\n    if (afterCursor[oldIndex] === newValue[newIndex]) {\n      suffixLength = i + 1;\n    } else {\n      break;\n    }\n  }\n  if (prefixLength >= beforeCursor.length) {\n    return prefixLength;\n  }\n  if (suffixLength >= afterCursor.length) {\n    return newValue.length - suffixLength;\n  }\n  if (prefixLength > 0) {\n    return prefixLength;\n  }\n  if (suffixLength > 0) {\n    return newValue.length - suffixLength;\n  }\n  if (oldValue.length > 0) {\n    const ratio = oldPosition / oldValue.length;\n    return Math.round(ratio * newValue.length);\n  }\n  return newValue.length;\n}\n\n// src/number-input.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    prop,\n    scope,\n    computed\n  } = service;\n  const focused = state.hasTag(\"focus\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = !!prop(\"readOnly\");\n  const required = !!prop(\"required\");\n  const scrubbing = state.matches(\"scrubbing\");\n  const empty = computed(\"isValueEmpty\");\n  const invalid = computed(\"isOutOfRange\") || !!prop(\"invalid\");\n  const isIncrementDisabled = disabled || !computed(\"canIncrement\") || readOnly;\n  const isDecrementDisabled = disabled || !computed(\"canDecrement\") || readOnly;\n  const translations = prop(\"translations\");\n  return {\n    focused,\n    invalid,\n    empty,\n    value: computed(\"formattedValue\"),\n    valueAsNumber: computed(\"valueAsNumber\"),\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    clearValue() {\n      send({\n        type: \"VALUE.CLEAR\"\n      });\n    },\n    increment() {\n      send({\n        type: \"VALUE.INCREMENT\"\n      });\n    },\n    decrement() {\n      send({\n        type: \"VALUE.DECREMENT\"\n      });\n    },\n    setToMax() {\n      send({\n        type: \"VALUE.SET\",\n        value: prop(\"max\")\n      });\n    },\n    setToMin() {\n      send({\n        type: \"VALUE.SET\",\n        value: prop(\"min\")\n      });\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-scrubbing\": dataAttr(scrubbing)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-required\": dataAttr(required),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        id: getLabelId(scope),\n        htmlFor: getInputId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        \"aria-invalid\": ariaAttr(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        \"data-scrubbing\": dataAttr(scrubbing)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        role: \"spinbutton\",\n        defaultValue: computed(\"formattedValue\"),\n        pattern: prop(\"formatOptions\") ? void 0 : prop(\"pattern\"),\n        inputMode: prop(\"inputMode\"),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": prop(\"min\"),\n        \"aria-valuemax\": prop(\"max\"),\n        \"aria-valuenow\": Number.isNaN(computed(\"valueAsNumber\")) ? void 0 : computed(\"valueAsNumber\"),\n        \"aria-valuetext\": computed(\"valueText\"),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onFocus() {\n          send({\n            type: \"INPUT.FOCUS\"\n          });\n        },\n        onBlur() {\n          send({\n            type: \"INPUT.BLUR\"\n          });\n        },\n        onInput(event) {\n          const selection = recordCursor(event.currentTarget, scope);\n          send({\n            type: \"INPUT.CHANGE\",\n            target: event.currentTarget,\n            hint: \"set\",\n            selection\n          });\n        },\n        onBeforeInput(event) {\n          try {\n            const {\n              selectionStart,\n              selectionEnd,\n              value\n            } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = computed(\"parser\").isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {}\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if (isComposingEvent(event)) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              send({\n                type: \"INPUT.ARROW_UP\",\n                step\n              });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({\n                type: \"INPUT.ARROW_DOWN\",\n                step\n              });\n              event.preventDefault();\n            },\n            Home() {\n              if (isModifierKey(event)) return;\n              send({\n                type: \"INPUT.HOME\"\n              });\n              event.preventDefault();\n            },\n            End() {\n              if (isModifierKey(event)) return;\n              send({\n                type: \"INPUT.END\"\n              });\n              event.preventDefault();\n            },\n            Enter() {\n              send({\n                type: \"INPUT.ENTER\"\n              });\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getDecrementTriggerId(scope),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onPointerDown(event) {\n          if (isDecrementDisabled) return;\n          if (!isLeftClick(event)) return;\n          send({\n            type: \"TRIGGER.PRESS_DOWN\",\n            hint: \"decrement\",\n            pointerType: event.pointerType\n          });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({\n              preventScroll: true\n            });\n          }\n        },\n        onPointerUp(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"decrement\",\n            pointerType: event.pointerType\n          });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"decrement\"\n          });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getIncrementTriggerId(scope),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return;\n          send({\n            type: \"TRIGGER.PRESS_DOWN\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({\n              preventScroll: true\n            });\n          }\n        },\n        onPointerUp(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n        },\n        onPointerLeave(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        id: getScrubberId(scope),\n        role: \"presentation\",\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onMouseDown(event) {\n          if (disabled) return;\n          if (!isLeftClick(event)) return;\n          const point = getEventPoint(event);\n          const win = getWindow(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - roundToDpr(7.5, dpr);\n          point.y = point.y - roundToDpr(7.5, dpr);\n          send({\n            type: \"SCRUBBER.PRESS_DOWN\",\n            point\n          });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\nvar createFormatter = (locale, options = {}) => {\n  return new Intl.NumberFormat(locale, options);\n};\nvar createParser = (locale, options = {}) => {\n  return new NumberParser(locale, options);\n};\nvar parseValue = (value, params) => {\n  const {\n    prop,\n    computed\n  } = params;\n  if (!prop(\"formatOptions\")) return parseFloat(value);\n  if (value === \"\") return Number.NaN;\n  return computed(\"parser\").parse(value);\n};\nvar formatValue = (value, params) => {\n  const {\n    prop,\n    computed\n  } = params;\n  if (Number.isNaN(value)) return \"\";\n  if (!prop(\"formatOptions\")) return value.toString();\n  return computed(\"formatter\").format(value);\n};\nvar getDefaultStep = (step, formatOptions) => {\n  let defaultStep = step !== void 0 && !Number.isNaN(step) ? step : 1;\n  if (formatOptions?.style === \"percent\" && (step === void 0 || Number.isNaN(step))) {\n    defaultStep = 0.01;\n  }\n  return defaultStep;\n};\n\n// src/number-input.machine.ts\nvar {\n  choose,\n  guards,\n  createMachine\n} = setup();\nvar {\n  not,\n  and\n} = guards;\nvar machine = createMachine({\n  props({\n    props: props2\n  }) {\n    const step = getDefaultStep(props2.step, props2.formatOptions);\n    return {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: !props2.allowOverflow,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"-?[0-9]*(.[0-9]+)?\",\n      defaultValue: \"\",\n      step,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      spinOnPress: true,\n      ...props2,\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({\n    prop,\n    bindable,\n    getComputed\n  }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          const computed = getComputed();\n          const valueAsNumber = parseValue(value, {\n            computed,\n            prop\n          });\n          prop(\"onValueChange\")?.({\n            value,\n            valueAsNumber\n          });\n        }\n      })),\n      hint: bindable(() => ({\n        defaultValue: null\n      })),\n      scrubberCursorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return value ? `x:${value.x}, y:${value.y}` : \"\";\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isRtl: ({\n      prop\n    }) => prop(\"dir\") === \"rtl\",\n    valueAsNumber: ({\n      context,\n      computed,\n      prop\n    }) => parseValue(context.get(\"value\"), {\n      computed,\n      prop\n    }),\n    formattedValue: ({\n      computed,\n      prop\n    }) => formatValue(computed(\"valueAsNumber\"), {\n      computed,\n      prop\n    }),\n    isAtMin: ({\n      computed,\n      prop\n    }) => isValueAtMin(computed(\"valueAsNumber\"), prop(\"min\")),\n    isAtMax: ({\n      computed,\n      prop\n    }) => isValueAtMax(computed(\"valueAsNumber\"), prop(\"max\")),\n    isOutOfRange: ({\n      computed,\n      prop\n    }) => !isValueWithinRange(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\")),\n    isValueEmpty: ({\n      context\n    }) => context.get(\"value\") === \"\",\n    isDisabled: ({\n      prop,\n      context\n    }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    canIncrement: ({\n      prop,\n      computed\n    }) => prop(\"allowOverflow\") || !computed(\"isAtMax\"),\n    canDecrement: ({\n      prop,\n      computed\n    }) => prop(\"allowOverflow\") || !computed(\"isAtMin\"),\n    valueText: ({\n      prop,\n      context\n    }) => prop(\"translations\").valueText?.(context.get(\"value\")),\n    formatter: memo(({\n      prop\n    }) => [prop(\"locale\"), prop(\"formatOptions\")], ([locale, formatOptions]) => createFormatter(locale, formatOptions)),\n    parser: memo(({\n      prop\n    }) => [prop(\"locale\"), prop(\"formatOptions\")], ([locale, formatOptions]) => createParser(locale, formatOptions))\n  },\n  watch({\n    track,\n    action,\n    context,\n    computed,\n    prop\n  }) {\n    track([() => context.get(\"value\"), () => prop(\"locale\")], () => {\n      action([\"syncInputElement\"]);\n    });\n    track([() => computed(\"isOutOfRange\")], () => {\n      action([\"invokeOnInvalid\"]);\n    });\n    track([() => context.hash(\"scrubberCursorPoint\")], () => {\n      action([\"setVirtualCursorPosition\"]);\n    });\n  },\n  effects: [\"trackFormControl\"],\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setRawValue\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\"]\n    },\n    \"VALUE.INCREMENT\": {\n      actions: [\"increment\"]\n    },\n    \"VALUE.DECREMENT\": {\n      actions: [\"decrement\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [{\n          guard: \"isTouchPointer\",\n          target: \"before:spin\",\n          actions: [\"setHint\"]\n        }, {\n          target: \"before:spin\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n        }],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"invokeOnFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focus\"],\n      effects: [\"attachWheelListener\"],\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [{\n          guard: \"isTouchPointer\",\n          target: \"before:spin\",\n          actions: [\"setHint\"]\n        }, {\n          target: \"before:spin\",\n          actions: [\"focusInput\", \"setHint\"]\n        }],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          actions: [\"increment\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          actions: [\"decrement\"]\n        },\n        \"INPUT.HOME\": {\n          actions: [\"decrementToMin\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"incrementToMax\"]\n        },\n        \"INPUT.CHANGE\": {\n          actions: [\"setValue\", \"setHint\"]\n        },\n        \"INPUT.BLUR\": [{\n          guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n          target: \"idle\",\n          actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }, {\n          guard: not(\"isInRange\"),\n          target: \"idle\",\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\", \"invokeOnInvalid\"]\n        }, {\n          target: \"idle\",\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }],\n        \"INPUT.ENTER\": {\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }\n      }\n    },\n    \"before:spin\": {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"waitForChangeDelay\"],\n      entry: choose([{\n        guard: \"isIncrementHint\",\n        actions: [\"increment\"]\n      }, {\n        guard: \"isDecrementHint\",\n        actions: [\"decrement\"]\n      }]),\n      on: {\n        CHANGE_DELAY: {\n          target: \"spinning\",\n          guard: and(\"isInRange\", \"spinOnPress\")\n        },\n        \"TRIGGER.PRESS_UP\": [{\n          guard: \"isTouchPointer\",\n          target: \"focused\",\n          actions: [\"clearHint\"]\n        }, {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }]\n      }\n    },\n    spinning: {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"spinValue\"],\n      on: {\n        SPIN: [{\n          guard: \"isIncrementHint\",\n          actions: [\"increment\"]\n        }, {\n          guard: \"isDecrementHint\",\n          actions: [\"decrement\"]\n        }],\n        \"TRIGGER.PRESS_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }\n      }\n    },\n    scrubbing: {\n      tags: [\"focus\"],\n      effects: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n      on: {\n        \"SCRUBBER.POINTER_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearCursorPoint\"]\n        },\n        \"SCRUBBER.POINTER_MOVE\": [{\n          guard: \"isIncrementHint\",\n          actions: [\"increment\", \"setCursorPoint\"]\n        }, {\n          guard: \"isDecrementHint\",\n          actions: [\"decrement\", \"setCursorPoint\"]\n        }]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      clampValueOnBlur: ({\n        prop\n      }) => prop(\"clampValueOnBlur\"),\n      spinOnPress: ({\n        prop\n      }) => !!prop(\"spinOnPress\"),\n      isInRange: ({\n        computed\n      }) => !computed(\"isOutOfRange\"),\n      isDecrementHint: ({\n        context,\n        event\n      }) => (event.hint ?? context.get(\"hint\")) === \"decrement\",\n      isIncrementHint: ({\n        context,\n        event\n      }) => (event.hint ?? context.get(\"hint\")) === \"increment\",\n      isTouchPointer: ({\n        event\n      }) => event.pointerType === \"touch\"\n    },\n    effects: {\n      waitForChangeDelay({\n        send\n      }) {\n        const id = setTimeout(() => {\n          send({\n            type: \"CHANGE_DELAY\"\n          });\n        }, 300);\n        return () => clearTimeout(id);\n      },\n      spinValue({\n        send\n      }) {\n        const id = setInterval(() => {\n          send({\n            type: \"SPIN\"\n          });\n        }, 50);\n        return () => clearInterval(id);\n      },\n      trackFormControl({\n        context,\n        scope\n      }) {\n        const inputEl = getInputEl(scope);\n        return trackFormControl(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      setupVirtualCursor({\n        context,\n        scope\n      }) {\n        const point = context.get(\"scrubberCursorPoint\");\n        return setupVirtualCursor(scope, point);\n      },\n      preventTextSelection({\n        scope\n      }) {\n        return preventTextSelection(scope);\n      },\n      trackButtonDisabled({\n        context,\n        scope,\n        send\n      }) {\n        const hint = context.get(\"hint\");\n        const btn = getPressedTriggerEl(scope, hint);\n        return observeAttributes(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({\n              type: \"TRIGGER.PRESS_UP\",\n              src: \"attr\"\n            });\n          }\n        });\n      },\n      attachWheelListener({\n        scope,\n        send,\n        prop\n      }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl || !scope.isActiveElement(inputEl) || !prop(\"allowMouseWheel\")) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send({\n              type: \"VALUE.INCREMENT\"\n            });\n          } else if (dir === -1) {\n            send({\n              type: \"VALUE.DECREMENT\"\n            });\n          }\n        }\n        return addDomEvent(inputEl, \"wheel\", onWheel, {\n          passive: false\n        });\n      },\n      activatePointerLock({\n        scope\n      }) {\n        if (isSafari()) return;\n        return requestPointerLock(scope.getDoc());\n      },\n      trackMousemove({\n        scope,\n        send,\n        context,\n        computed\n      }) {\n        const doc = scope.getDoc();\n        function onMousemove(event) {\n          const point = context.get(\"scrubberCursorPoint\");\n          const isRtl = computed(\"isRtl\");\n          const value = getMousemoveValue(scope, {\n            point,\n            isRtl,\n            event\n          });\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send({\n            type: \"SCRUBBER.POINTER_UP\"\n          });\n        }\n        return callAll(addDomEvent(doc, \"mousemove\", onMousemove, false), addDomEvent(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput({\n        scope,\n        prop\n      }) {\n        if (!prop(\"focusInputOnChange\")) return;\n        const inputEl = getInputEl(scope);\n        if (scope.isActiveElement(inputEl)) return;\n        raf(() => inputEl?.focus({\n          preventScroll: true\n        }));\n      },\n      increment({\n        context,\n        event,\n        prop,\n        computed\n      }) {\n        let nextValue = incrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      decrement({\n        context,\n        event,\n        prop,\n        computed\n      }) {\n        let nextValue = decrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      setClampedValue({\n        context,\n        prop,\n        computed\n      }) {\n        const nextValue = clampValue(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      setRawValue({\n        context,\n        event,\n        prop,\n        computed\n      }) {\n        let nextValue = parseValue(event.value, {\n          computed,\n          prop\n        });\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      setValue({\n        context,\n        event\n      }) {\n        const value = event.target?.value ?? event.value;\n        context.set(\"value\", value);\n      },\n      clearValue({\n        context\n      }) {\n        context.set(\"value\", \"\");\n      },\n      incrementToMax({\n        context,\n        prop,\n        computed\n      }) {\n        const value = formatValue(prop(\"max\"), {\n          computed,\n          prop\n        });\n        context.set(\"value\", value);\n      },\n      decrementToMin({\n        context,\n        prop,\n        computed\n      }) {\n        const value = formatValue(prop(\"min\"), {\n          computed,\n          prop\n        });\n        context.set(\"value\", value);\n      },\n      setHint({\n        context,\n        event\n      }) {\n        context.set(\"hint\", event.hint);\n      },\n      clearHint({\n        context\n      }) {\n        context.set(\"hint\", null);\n      },\n      invokeOnFocus({\n        computed,\n        prop\n      }) {\n        prop(\"onFocusChange\")?.({\n          focused: true,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnBlur({\n        computed,\n        prop\n      }) {\n        prop(\"onFocusChange\")?.({\n          focused: false,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnInvalid({\n        computed,\n        prop,\n        event\n      }) {\n        if (event.type === \"INPUT.CHANGE\") return;\n        const reason = computed(\"valueAsNumber\") > prop(\"max\") ? \"rangeOverflow\" : \"rangeUnderflow\";\n        prop(\"onValueInvalid\")?.({\n          reason,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      syncInputElement({\n        context,\n        event,\n        computed,\n        scope\n      }) {\n        const value = event.type.endsWith(\"CHANGE\") ? context.get(\"value\") : computed(\"formattedValue\");\n        const inputEl = getInputEl(scope);\n        const sel = event.selection;\n        raf(() => {\n          setElementValue(inputEl, value);\n          restoreCursor(inputEl, sel, scope);\n        });\n      },\n      setFormattedValue({\n        context,\n        computed\n      }) {\n        context.set(\"value\", computed(\"formattedValue\"));\n      },\n      setCursorPoint({\n        context,\n        event\n      }) {\n        context.set(\"scrubberCursorPoint\", event.point);\n      },\n      clearCursorPoint({\n        context\n      }) {\n        context.set(\"scrubberCursorPoint\", null);\n      },\n      setVirtualCursorPosition({\n        context,\n        scope\n      }) {\n        const cursorEl = getCursorEl(scope);\n        const point = context.get(\"scrubberCursorPoint\");\n        if (!cursorEl || !point) return;\n        cursorEl.style.transform = `translate3d(${point.x}px, ${point.y}px, 0px)`;\n      }\n    }\n  }\n});\nvar props = createProps()([\"allowMouseWheel\", \"allowOverflow\", \"clampValueOnBlur\", \"dir\", \"disabled\", \"focusInputOnChange\", \"form\", \"formatOptions\", \"getRootNode\", \"id\", \"ids\", \"inputMode\", \"invalid\", \"locale\", \"max\", \"min\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueInvalid\", \"pattern\", \"required\", \"readOnly\", \"spinOnPress\", \"step\", \"translations\", \"value\", \"defaultValue\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","raf","setElementValue","addDomEvent","isSafari","requestPointerLock","observeAttributes","trackFormControl","MAX_Z_INDEX","dataAttr","isLeftClick","getEventPoint","getWindow","ariaAttr","isComposingEvent","getEventStep","isModifierKey","isValueAtMax","isValueAtMin","clampValue","decrementValue","incrementValue","callAll","isValueWithinRange","createSplitProps","roundToDpr","wrap","setup","memo","NumberParser","createProps","anatomy","parts","build","getRootId","ctx","ids","root","id","getInputId","input","getIncrementTriggerId","incrementTrigger","getDecrementTriggerId","decrementTrigger","getScrubberId","scrubber","getCursorId","getLabelId","label","getInputEl","getById","getIncrementTriggerEl","getDecrementTriggerEl","getCursorEl","getDoc","getElementById","getPressedTriggerEl","hint","btnEl","setupVirtualCursor","point","createVirtualCursor","remove","preventTextSelection","doc","html","documentElement","body","style","pointerEvents","userSelect","cursor","length","removeAttribute","getMousemoveValue","opts","isRtl","event","win","getWin","x","movementX","devicePixelRatio","y","movementY","newPoint","width","innerWidth","half","el","createElement","className","Object","assign","height","position","left","top","zIndex","transform","willChange","innerHTML","appendChild","recordCursor","inputEl","scope","isActiveElement","selectionStart","start","selectionEnd","end","value","restoreCursor","selection","len","setSelectionRange","newValue","oldValue","newStart","getNewCursorPosition","newEnd","clampedStart","Math","max","min","clampedEnd","oldPosition","beforeCursor","slice","afterCursor","prefixLength","maxPrefixLength","i","suffixLength","maxSuffixLength","oldIndex","newIndex","ratio","round","connect","service","normalize","state","send","prop","computed","focused","hasTag","disabled","readOnly","required","scrubbing","matches","empty","invalid","isIncrementDisabled","isDecrementDisabled","translations","valueAsNumber","setValue","type","clearValue","increment","decrement","setToMax","setToMin","focus","getRootProps","element","attrs","dir","getLabelProps","htmlFor","getControlProps","control","role","getValueTextProps","valueText","getInputProps","name","form","defaultValue","pattern","inputMode","autoComplete","autoCorrect","spellCheck","Number","isNaN","onFocus","onBlur","onInput","currentTarget","target","onBeforeInput","nextValue","data","isValid","isValidPartialNumber","preventDefault","onKeyDown","defaultPrevented","step","keyMap","ArrowUp","ArrowDown","Home","End","Enter","exec","key","getDecrementTriggerProps","button","decrementLabel","tabIndex","onPointerDown","pointerType","preventScroll","onPointerUp","onPointerLeave","getIncrementTriggerProps","incrementLabel","getScrubberProps","onMouseDown","dpr","createFormatter","locale","options","Intl","NumberFormat","createParser","parseValue","params","parseFloat","NaN","parse","formatValue","toString","format","getDefaultStep","formatOptions","defaultStep","choose","guards","createMachine","not","and","machine","props","props2","focusInputOnChange","clampValueOnBlur","allowOverflow","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","spinOnPress","initialState","context","bindable","getComputed","onChange","scrubberCursorPoint","hash","fieldsetDisabled","get","formattedValue","isAtMin","isAtMax","isOutOfRange","isValueEmpty","isDisabled","canIncrement","canDecrement","formatter","parser","watch","track","action","effects","on","actions","states","idle","guard","tags","entry","CHANGE_DELAY","spinning","SPIN","implementations","isInRange","isDecrementHint","isIncrementHint","isTouchPointer","waitForChangeDelay","setTimeout","clearTimeout","spinValue","setInterval","clearInterval","onFieldsetDisabledChange","set","onFormReset","initial","trackButtonDisabled","btn","attributes","callback","src","attachWheelListener","onWheel","sign","deltaY","passive","activatePointerLock","trackMousemove","onMousemove","onMouseup","focusInput","setClampedValue","setRawValue","incrementToMax","decrementToMin","setHint","clearHint","invokeOnFocus","invokeOnBlur","invokeOnInvalid","reason","syncInputElement","endsWith","sel","setFormattedValue","setCursorPoint","clearCursorPoint","setVirtualCursorPosition","cursorEl","splitProps"],"sources":["/Users/ameliamagick/personal-finance-tracker/node_modules/@zag-js/number-input/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, addDomEvent, isSafari, requestPointerLock, observeAttributes, trackFormControl, MAX_Z_INDEX, dataAttr, isLeftClick, getEventPoint, getWindow, ariaAttr, isComposingEvent, getEventStep, isModifierKey } from '@zag-js/dom-query';\nimport { isValueAtMax, isValueAtMin, clampValue, decrementValue, incrementValue, callAll, isValueWithinRange, createSplitProps, roundToDpr, wrap } from '@zag-js/utils';\nimport { setup, memo } from '@zag-js/core';\nimport { NumberParser } from '@internationalized/number';\nimport { createProps } from '@zag-js/types';\n\n// src/number-input.anatomy.ts\nvar anatomy = createAnatomy(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`;\nvar getIncrementTriggerId = (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`;\nvar getDecrementTriggerId = (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`;\nvar getScrubberId = (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`;\nvar getCursorId = (ctx) => `number-input:${ctx.id}:cursor`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getIncrementTriggerEl = (ctx) => ctx.getById(getIncrementTriggerId(ctx));\nvar getDecrementTriggerEl = (ctx) => ctx.getById(getDecrementTriggerId(ctx));\nvar getCursorEl = (ctx) => ctx.getDoc().getElementById(getCursorId(ctx));\nvar getPressedTriggerEl = (ctx, hint) => {\n  let btnEl = null;\n  if (hint === \"increment\") {\n    btnEl = getIncrementTriggerEl(ctx);\n  }\n  if (hint === \"decrement\") {\n    btnEl = getDecrementTriggerEl(ctx);\n  }\n  return btnEl;\n};\nvar setupVirtualCursor = (ctx, point) => {\n  if (isSafari()) return;\n  createVirtualCursor(ctx, point);\n  return () => {\n    getCursorEl(ctx)?.remove();\n  };\n};\nvar preventTextSelection = (ctx) => {\n  const doc = ctx.getDoc();\n  const html = doc.documentElement;\n  const body = doc.body;\n  body.style.pointerEvents = \"none\";\n  html.style.userSelect = \"none\";\n  html.style.cursor = \"ew-resize\";\n  return () => {\n    body.style.pointerEvents = \"\";\n    html.style.userSelect = \"\";\n    html.style.cursor = \"\";\n    if (!html.style.length) {\n      html.removeAttribute(\"style\");\n    }\n    if (!body.style.length) {\n      body.removeAttribute(\"style\");\n    }\n  };\n};\nvar getMousemoveValue = (ctx, opts) => {\n  const { point, isRtl, event } = opts;\n  const win = ctx.getWin();\n  const x = roundToDpr(event.movementX, win.devicePixelRatio);\n  const y = roundToDpr(event.movementY, win.devicePixelRatio);\n  let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n  if (isRtl && hint === \"increment\") hint = \"decrement\";\n  if (isRtl && hint === \"decrement\") hint = \"increment\";\n  const newPoint = { x: point.x + x, y: point.y + y };\n  const width = win.innerWidth;\n  const half = roundToDpr(7.5, win.devicePixelRatio);\n  newPoint.x = wrap(newPoint.x + half, width) - half;\n  return { hint, point: newPoint };\n};\nvar createVirtualCursor = (ctx, point) => {\n  const doc = ctx.getDoc();\n  const el = doc.createElement(\"div\");\n  el.className = \"scrubber--cursor\";\n  el.id = getCursorId(ctx);\n  Object.assign(el.style, {\n    width: \"15px\",\n    height: \"15px\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: MAX_Z_INDEX,\n    transform: point ? `translate3d(${point.x}px, ${point.y}px, 0px)` : void 0,\n    willChange: \"transform\"\n  });\n  el.innerHTML = `\n      <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n        <g transform=\"translate(2 3)\">\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n        </g>\n      </svg>`;\n  doc.body.appendChild(el);\n};\n\n// src/cursor.ts\nfunction recordCursor(inputEl, scope) {\n  if (!inputEl || !scope.isActiveElement(inputEl)) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    if (start == null || end == null) return void 0;\n    return { start, end, value };\n  } catch {\n    return void 0;\n  }\n}\nfunction restoreCursor(inputEl, selection, scope) {\n  if (!inputEl || !scope.isActiveElement(inputEl)) return;\n  if (!selection) {\n    const len = inputEl.value.length;\n    inputEl.setSelectionRange(len, len);\n    return;\n  }\n  try {\n    const newValue = inputEl.value;\n    const { start, end, value: oldValue } = selection;\n    if (newValue === oldValue) {\n      inputEl.setSelectionRange(start, end);\n      return;\n    }\n    const newStart = getNewCursorPosition(oldValue, newValue, start);\n    const newEnd = start === end ? newStart : getNewCursorPosition(oldValue, newValue, end);\n    const clampedStart = Math.max(0, Math.min(newStart, newValue.length));\n    const clampedEnd = Math.max(clampedStart, Math.min(newEnd, newValue.length));\n    inputEl.setSelectionRange(clampedStart, clampedEnd);\n  } catch {\n    const len = inputEl.value.length;\n    inputEl.setSelectionRange(len, len);\n  }\n}\nfunction getNewCursorPosition(oldValue, newValue, oldPosition) {\n  const beforeCursor = oldValue.slice(0, oldPosition);\n  const afterCursor = oldValue.slice(oldPosition);\n  let prefixLength = 0;\n  const maxPrefixLength = Math.min(beforeCursor.length, newValue.length);\n  for (let i = 0; i < maxPrefixLength; i++) {\n    if (beforeCursor[i] === newValue[i]) {\n      prefixLength = i + 1;\n    } else {\n      break;\n    }\n  }\n  let suffixLength = 0;\n  const maxSuffixLength = Math.min(afterCursor.length, newValue.length - prefixLength);\n  for (let i = 0; i < maxSuffixLength; i++) {\n    const oldIndex = afterCursor.length - 1 - i;\n    const newIndex = newValue.length - 1 - i;\n    if (afterCursor[oldIndex] === newValue[newIndex]) {\n      suffixLength = i + 1;\n    } else {\n      break;\n    }\n  }\n  if (prefixLength >= beforeCursor.length) {\n    return prefixLength;\n  }\n  if (suffixLength >= afterCursor.length) {\n    return newValue.length - suffixLength;\n  }\n  if (prefixLength > 0) {\n    return prefixLength;\n  }\n  if (suffixLength > 0) {\n    return newValue.length - suffixLength;\n  }\n  if (oldValue.length > 0) {\n    const ratio = oldPosition / oldValue.length;\n    return Math.round(ratio * newValue.length);\n  }\n  return newValue.length;\n}\n\n// src/number-input.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope, computed } = service;\n  const focused = state.hasTag(\"focus\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = !!prop(\"readOnly\");\n  const required = !!prop(\"required\");\n  const scrubbing = state.matches(\"scrubbing\");\n  const empty = computed(\"isValueEmpty\");\n  const invalid = computed(\"isOutOfRange\") || !!prop(\"invalid\");\n  const isIncrementDisabled = disabled || !computed(\"canIncrement\") || readOnly;\n  const isDecrementDisabled = disabled || !computed(\"canDecrement\") || readOnly;\n  const translations = prop(\"translations\");\n  return {\n    focused,\n    invalid,\n    empty,\n    value: computed(\"formattedValue\"),\n    valueAsNumber: computed(\"valueAsNumber\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    increment() {\n      send({ type: \"VALUE.INCREMENT\" });\n    },\n    decrement() {\n      send({ type: \"VALUE.DECREMENT\" });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: prop(\"max\") });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: prop(\"min\") });\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-scrubbing\": dataAttr(scrubbing)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-required\": dataAttr(required),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        id: getLabelId(scope),\n        htmlFor: getInputId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        \"aria-invalid\": ariaAttr(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        \"data-scrubbing\": dataAttr(scrubbing)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        role: \"spinbutton\",\n        defaultValue: computed(\"formattedValue\"),\n        pattern: prop(\"formatOptions\") ? void 0 : prop(\"pattern\"),\n        inputMode: prop(\"inputMode\"),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": prop(\"min\"),\n        \"aria-valuemax\": prop(\"max\"),\n        \"aria-valuenow\": Number.isNaN(computed(\"valueAsNumber\")) ? void 0 : computed(\"valueAsNumber\"),\n        \"aria-valuetext\": computed(\"valueText\"),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"INPUT.BLUR\" });\n        },\n        onInput(event) {\n          const selection = recordCursor(event.currentTarget, scope);\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\", selection });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = computed(\"parser\").isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if (isComposingEvent(event)) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if (isModifierKey(event)) return;\n              send({ type: \"INPUT.HOME\" });\n              event.preventDefault();\n            },\n            End() {\n              if (isModifierKey(event)) return;\n              send({ type: \"INPUT.END\" });\n              event.preventDefault();\n            },\n            Enter() {\n              send({ type: \"INPUT.ENTER\" });\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getDecrementTriggerId(scope),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onPointerDown(event) {\n          if (isDecrementDisabled) return;\n          if (!isLeftClick(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getIncrementTriggerId(scope),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        id: getScrubberId(scope),\n        role: \"presentation\",\n        \"data-scrubbing\": dataAttr(scrubbing),\n        onMouseDown(event) {\n          if (disabled) return;\n          if (!isLeftClick(event)) return;\n          const point = getEventPoint(event);\n          const win = getWindow(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - roundToDpr(7.5, dpr);\n          point.y = point.y - roundToDpr(7.5, dpr);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\nvar createFormatter = (locale, options = {}) => {\n  return new Intl.NumberFormat(locale, options);\n};\nvar createParser = (locale, options = {}) => {\n  return new NumberParser(locale, options);\n};\nvar parseValue = (value, params) => {\n  const { prop, computed } = params;\n  if (!prop(\"formatOptions\")) return parseFloat(value);\n  if (value === \"\") return Number.NaN;\n  return computed(\"parser\").parse(value);\n};\nvar formatValue = (value, params) => {\n  const { prop, computed } = params;\n  if (Number.isNaN(value)) return \"\";\n  if (!prop(\"formatOptions\")) return value.toString();\n  return computed(\"formatter\").format(value);\n};\nvar getDefaultStep = (step, formatOptions) => {\n  let defaultStep = step !== void 0 && !Number.isNaN(step) ? step : 1;\n  if (formatOptions?.style === \"percent\" && (step === void 0 || Number.isNaN(step))) {\n    defaultStep = 0.01;\n  }\n  return defaultStep;\n};\n\n// src/number-input.machine.ts\nvar { choose, guards, createMachine } = setup();\nvar { not, and } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const step = getDefaultStep(props2.step, props2.formatOptions);\n    return {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: !props2.allowOverflow,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"-?[0-9]*(.[0-9]+)?\",\n      defaultValue: \"\",\n      step,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      spinOnPress: true,\n      ...props2,\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getComputed }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          const computed = getComputed();\n          const valueAsNumber = parseValue(value, { computed, prop });\n          prop(\"onValueChange\")?.({ value, valueAsNumber });\n        }\n      })),\n      hint: bindable(() => ({ defaultValue: null })),\n      scrubberCursorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return value ? `x:${value.x}, y:${value.y}` : \"\";\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  computed: {\n    isRtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    valueAsNumber: ({ context, computed, prop }) => parseValue(context.get(\"value\"), { computed, prop }),\n    formattedValue: ({ computed, prop }) => formatValue(computed(\"valueAsNumber\"), { computed, prop }),\n    isAtMin: ({ computed, prop }) => isValueAtMin(computed(\"valueAsNumber\"), prop(\"min\")),\n    isAtMax: ({ computed, prop }) => isValueAtMax(computed(\"valueAsNumber\"), prop(\"max\")),\n    isOutOfRange: ({ computed, prop }) => !isValueWithinRange(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\")),\n    isValueEmpty: ({ context }) => context.get(\"value\") === \"\",\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    canIncrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMax\"),\n    canDecrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMin\"),\n    valueText: ({ prop, context }) => prop(\"translations\").valueText?.(context.get(\"value\")),\n    formatter: memo(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      ([locale, formatOptions]) => createFormatter(locale, formatOptions)\n    ),\n    parser: memo(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      ([locale, formatOptions]) => createParser(locale, formatOptions)\n    )\n  },\n  watch({ track, action, context, computed, prop }) {\n    track([() => context.get(\"value\"), () => prop(\"locale\")], () => {\n      action([\"syncInputElement\"]);\n    });\n    track([() => computed(\"isOutOfRange\")], () => {\n      action([\"invokeOnInvalid\"]);\n    });\n    track([() => context.hash(\"scrubberCursorPoint\")], () => {\n      action([\"setVirtualCursorPosition\"]);\n    });\n  },\n  effects: [\"trackFormControl\"],\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setRawValue\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\"]\n    },\n    \"VALUE.INCREMENT\": {\n      actions: [\"increment\"]\n    },\n    \"VALUE.DECREMENT\": {\n      actions: [\"decrement\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          {\n            target: \"before:spin\",\n            actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n          }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"invokeOnFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focus\"],\n      effects: [\"attachWheelListener\"],\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          actions: [\"increment\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          actions: [\"decrement\"]\n        },\n        \"INPUT.HOME\": {\n          actions: [\"decrementToMin\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"incrementToMax\"]\n        },\n        \"INPUT.CHANGE\": {\n          actions: [\"setValue\", \"setHint\"]\n        },\n        \"INPUT.BLUR\": [\n          {\n            guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n            target: \"idle\",\n            actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n          },\n          {\n            guard: not(\"isInRange\"),\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\", \"invokeOnInvalid\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }\n        ],\n        \"INPUT.ENTER\": {\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }\n      }\n    },\n    \"before:spin\": {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"waitForChangeDelay\"],\n      entry: choose([\n        { guard: \"isIncrementHint\", actions: [\"increment\"] },\n        { guard: \"isDecrementHint\", actions: [\"decrement\"] }\n      ]),\n      on: {\n        CHANGE_DELAY: {\n          target: \"spinning\",\n          guard: and(\"isInRange\", \"spinOnPress\")\n        },\n        \"TRIGGER.PRESS_UP\": [\n          { guard: \"isTouchPointer\", target: \"focused\", actions: [\"clearHint\"] },\n          { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n        ]\n      }\n    },\n    spinning: {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"spinValue\"],\n      on: {\n        SPIN: [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\"]\n          }\n        ],\n        \"TRIGGER.PRESS_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }\n      }\n    },\n    scrubbing: {\n      tags: [\"focus\"],\n      effects: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n      on: {\n        \"SCRUBBER.POINTER_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearCursorPoint\"]\n        },\n        \"SCRUBBER.POINTER_MOVE\": [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\", \"setCursorPoint\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\", \"setCursorPoint\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      clampValueOnBlur: ({ prop }) => prop(\"clampValueOnBlur\"),\n      spinOnPress: ({ prop }) => !!prop(\"spinOnPress\"),\n      isInRange: ({ computed }) => !computed(\"isOutOfRange\"),\n      isDecrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"decrement\",\n      isIncrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"increment\",\n      isTouchPointer: ({ event }) => event.pointerType === \"touch\"\n    },\n    effects: {\n      waitForChangeDelay({ send }) {\n        const id = setTimeout(() => {\n          send({ type: \"CHANGE_DELAY\" });\n        }, 300);\n        return () => clearTimeout(id);\n      },\n      spinValue({ send }) {\n        const id = setInterval(() => {\n          send({ type: \"SPIN\" });\n        }, 50);\n        return () => clearInterval(id);\n      },\n      trackFormControl({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        return trackFormControl(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      setupVirtualCursor({ context, scope }) {\n        const point = context.get(\"scrubberCursorPoint\");\n        return setupVirtualCursor(scope, point);\n      },\n      preventTextSelection({ scope }) {\n        return preventTextSelection(scope);\n      },\n      trackButtonDisabled({ context, scope, send }) {\n        const hint = context.get(\"hint\");\n        const btn = getPressedTriggerEl(scope, hint);\n        return observeAttributes(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n          }\n        });\n      },\n      attachWheelListener({ scope, send, prop }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl || !scope.isActiveElement(inputEl) || !prop(\"allowMouseWheel\")) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send({ type: \"VALUE.INCREMENT\" });\n          } else if (dir === -1) {\n            send({ type: \"VALUE.DECREMENT\" });\n          }\n        }\n        return addDomEvent(inputEl, \"wheel\", onWheel, { passive: false });\n      },\n      activatePointerLock({ scope }) {\n        if (isSafari()) return;\n        return requestPointerLock(scope.getDoc());\n      },\n      trackMousemove({ scope, send, context, computed }) {\n        const doc = scope.getDoc();\n        function onMousemove(event) {\n          const point = context.get(\"scrubberCursorPoint\");\n          const isRtl = computed(\"isRtl\");\n          const value = getMousemoveValue(scope, { point, isRtl, event });\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send({ type: \"SCRUBBER.POINTER_UP\" });\n        }\n        return callAll(addDomEvent(doc, \"mousemove\", onMousemove, false), addDomEvent(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput({ scope, prop }) {\n        if (!prop(\"focusInputOnChange\")) return;\n        const inputEl = getInputEl(scope);\n        if (scope.isActiveElement(inputEl)) return;\n        raf(() => inputEl?.focus({ preventScroll: true }));\n      },\n      increment({ context, event, prop, computed }) {\n        let nextValue = incrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      decrement({ context, event, prop, computed }) {\n        let nextValue = decrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setClampedValue({ context, prop, computed }) {\n        const nextValue = clampValue(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setRawValue({ context, event, prop, computed }) {\n        let nextValue = parseValue(event.value, { computed, prop });\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setValue({ context, event }) {\n        const value = event.target?.value ?? event.value;\n        context.set(\"value\", value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", \"\");\n      },\n      incrementToMax({ context, prop, computed }) {\n        const value = formatValue(prop(\"max\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      decrementToMin({ context, prop, computed }) {\n        const value = formatValue(prop(\"min\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      setHint({ context, event }) {\n        context.set(\"hint\", event.hint);\n      },\n      clearHint({ context }) {\n        context.set(\"hint\", null);\n      },\n      invokeOnFocus({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: true,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnBlur({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: false,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnInvalid({ computed, prop, event }) {\n        if (event.type === \"INPUT.CHANGE\") return;\n        const reason = computed(\"valueAsNumber\") > prop(\"max\") ? \"rangeOverflow\" : \"rangeUnderflow\";\n        prop(\"onValueInvalid\")?.({\n          reason,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      syncInputElement({ context, event, computed, scope }) {\n        const value = event.type.endsWith(\"CHANGE\") ? context.get(\"value\") : computed(\"formattedValue\");\n        const inputEl = getInputEl(scope);\n        const sel = event.selection;\n        raf(() => {\n          setElementValue(inputEl, value);\n          restoreCursor(inputEl, sel, scope);\n        });\n      },\n      setFormattedValue({ context, computed }) {\n        context.set(\"value\", computed(\"formattedValue\"));\n      },\n      setCursorPoint({ context, event }) {\n        context.set(\"scrubberCursorPoint\", event.point);\n      },\n      clearCursorPoint({ context }) {\n        context.set(\"scrubberCursorPoint\", null);\n      },\n      setVirtualCursorPosition({ context, scope }) {\n        const cursorEl = getCursorEl(scope);\n        const point = context.get(\"scrubberCursorPoint\");\n        if (!cursorEl || !point) return;\n        cursorEl.style.transform = `translate3d(${point.x}px, ${point.y}px, 0px)`;\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"allowMouseWheel\",\n  \"allowOverflow\",\n  \"clampValueOnBlur\",\n  \"dir\",\n  \"disabled\",\n  \"focusInputOnChange\",\n  \"form\",\n  \"formatOptions\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"inputMode\",\n  \"invalid\",\n  \"locale\",\n  \"max\",\n  \"min\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueInvalid\",\n  \"pattern\",\n  \"required\",\n  \"readOnly\",\n  \"spinOnPress\",\n  \"step\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}