{"ast":null,"code":"'use client';\n\nimport { dataAttr } from '@zag-js/dom-query';\nimport { useRef, useId, useMemo } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { parts } from './fieldset.anatomy.js';\nconst useFieldset = (props = {}) => {\n  const {\n    disabled = false,\n    invalid = false\n  } = props;\n  const env = useEnvironmentContext();\n  const hasErrorText = useRef(false);\n  const hasHelperText = useRef(false);\n  const uid = useId();\n  const id = props.id ?? uid;\n  const rootRef = useRef(null);\n  const legendId = `fieldset::${id}::legend`;\n  const errorTextId = `fieldset::${id}::error-text`;\n  const helperTextId = `fieldset::${id}::helper-text`;\n  useSafeLayoutEffect(() => {\n    const rootNode = rootRef.current;\n    if (!rootNode) return;\n    const checkTextElements = () => {\n      const docOrShadowRoot = env.getRootNode();\n      hasErrorText.current = !!docOrShadowRoot.getElementById(errorTextId);\n      hasHelperText.current = !!docOrShadowRoot.getElementById(helperTextId);\n    };\n    checkTextElements();\n    const win = env.getWindow();\n    const observer = new win.MutationObserver(checkTextElements);\n    observer.observe(rootNode, {\n      childList: true,\n      subtree: true\n    });\n    return () => observer.disconnect();\n  }, [env, errorTextId, helperTextId]);\n  const labelIds = useMemo(() => {\n    const ids = [];\n    if (hasErrorText.current && invalid) ids.push(errorTextId);\n    if (hasHelperText.current) ids.push(helperTextId);\n    return ids.join(\" \") || void 0;\n  }, [invalid, errorTextId, helperTextId]);\n  const getRootProps = useMemo(() => () => ({\n    ...parts.root.attrs,\n    ref: rootRef,\n    disabled,\n    \"data-disabled\": dataAttr(disabled),\n    \"data-invalid\": dataAttr(invalid),\n    \"aria-labelledby\": legendId,\n    \"aria-describedby\": labelIds\n  }), [disabled, invalid, legendId, labelIds]);\n  const getLegendProps = useMemo(() => () => ({\n    id: legendId,\n    ...parts.legend.attrs,\n    \"data-disabled\": dataAttr(disabled),\n    \"data-invalid\": dataAttr(invalid)\n  }), [legendId, disabled, invalid]);\n  const getHelperTextProps = useMemo(() => () => ({\n    id: helperTextId,\n    ...parts.helperText.attrs\n  }), [helperTextId]);\n  const getErrorTextProps = useMemo(() => () => ({\n    id: errorTextId,\n    ...parts.errorText.attrs,\n    \"aria-live\": \"polite\"\n  }), [errorTextId]);\n  return {\n    refs: {\n      rootRef\n    },\n    disabled,\n    invalid,\n    getRootProps,\n    getLegendProps,\n    getHelperTextProps,\n    getErrorTextProps\n  };\n};\nexport { useFieldset };","map":{"version":3,"names":["dataAttr","useRef","useId","useMemo","useEnvironmentContext","useSafeLayoutEffect","parts","useFieldset","props","disabled","invalid","env","hasErrorText","hasHelperText","uid","id","rootRef","legendId","errorTextId","helperTextId","rootNode","current","checkTextElements","docOrShadowRoot","getRootNode","getElementById","win","getWindow","observer","MutationObserver","observe","childList","subtree","disconnect","labelIds","ids","push","join","getRootProps","root","attrs","ref","getLegendProps","legend","getHelperTextProps","helperText","getErrorTextProps","errorText","refs"],"sources":["/Users/ameliamagick/personal-finance-tracker/node_modules/@ark-ui/react/dist/components/fieldset/use-fieldset.js"],"sourcesContent":["'use client';\nimport { dataAttr } from '@zag-js/dom-query';\nimport { useRef, useId, useMemo } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { parts } from './fieldset.anatomy.js';\n\nconst useFieldset = (props = {}) => {\n  const { disabled = false, invalid = false } = props;\n  const env = useEnvironmentContext();\n  const hasErrorText = useRef(false);\n  const hasHelperText = useRef(false);\n  const uid = useId();\n  const id = props.id ?? uid;\n  const rootRef = useRef(null);\n  const legendId = `fieldset::${id}::legend`;\n  const errorTextId = `fieldset::${id}::error-text`;\n  const helperTextId = `fieldset::${id}::helper-text`;\n  useSafeLayoutEffect(() => {\n    const rootNode = rootRef.current;\n    if (!rootNode) return;\n    const checkTextElements = () => {\n      const docOrShadowRoot = env.getRootNode();\n      hasErrorText.current = !!docOrShadowRoot.getElementById(errorTextId);\n      hasHelperText.current = !!docOrShadowRoot.getElementById(helperTextId);\n    };\n    checkTextElements();\n    const win = env.getWindow();\n    const observer = new win.MutationObserver(checkTextElements);\n    observer.observe(rootNode, { childList: true, subtree: true });\n    return () => observer.disconnect();\n  }, [env, errorTextId, helperTextId]);\n  const labelIds = useMemo(() => {\n    const ids = [];\n    if (hasErrorText.current && invalid) ids.push(errorTextId);\n    if (hasHelperText.current) ids.push(helperTextId);\n    return ids.join(\" \") || void 0;\n  }, [invalid, errorTextId, helperTextId]);\n  const getRootProps = useMemo(\n    () => () => ({\n      ...parts.root.attrs,\n      ref: rootRef,\n      disabled,\n      \"data-disabled\": dataAttr(disabled),\n      \"data-invalid\": dataAttr(invalid),\n      \"aria-labelledby\": legendId,\n      \"aria-describedby\": labelIds\n    }),\n    [disabled, invalid, legendId, labelIds]\n  );\n  const getLegendProps = useMemo(\n    () => () => ({\n      id: legendId,\n      ...parts.legend.attrs,\n      \"data-disabled\": dataAttr(disabled),\n      \"data-invalid\": dataAttr(invalid)\n    }),\n    [legendId, disabled, invalid]\n  );\n  const getHelperTextProps = useMemo(\n    () => () => ({\n      id: helperTextId,\n      ...parts.helperText.attrs\n    }),\n    [helperTextId]\n  );\n  const getErrorTextProps = useMemo(\n    () => () => ({\n      id: errorTextId,\n      ...parts.errorText.attrs,\n      \"aria-live\": \"polite\"\n    }),\n    [errorTextId]\n  );\n  return {\n    refs: {\n      rootRef\n    },\n    disabled,\n    invalid,\n    getRootProps,\n    getLegendProps,\n    getHelperTextProps,\n    getErrorTextProps\n  };\n};\n\nexport { useFieldset };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}